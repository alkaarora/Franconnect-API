{
  "openapi": "3.0.0",
  "info": {
    "description": "",
    "version": "1.0",
    "title": "Franconnect API"
  },
  "tags": [
    {
      "name": "Introduction",
      "description": "<p>Managing a franchise system requires that all the users have access to timely and reliable information that is appropriate for their role. Yet, crucial information can be siloed in disparate applications limiting the ability to get a complete view across the entire franchise and reduces the efficiency of the users performing their daily tasks. Getting a collection of enterprise applications to effectively work together can tie-up the IT resources needed to develop and maintain an integrated solution or perhaps is outside the core capabilities of the organization. To help meet this need while addressing the challenge, FranConnect offers several options for integrating FranConnect Sky with other business softwares.</p><p><h4 class=\"western\">Off-the Shelf Integrations</h4>A number of popular third-party business applications are available for integration with your FranConnect Sky system. Using FranConnect-provided, pre-built integrations provide additional functionality such as document e-signature, lead assessment, and brand reputation management.</p><p><h4 class=\"western\">FranConnect Delivered Integrations</h4>Customers can also choose to have FranConnect deliver and maintain an integrated solution. Working with the customer to understand their work processes, the applications that need to be integrated, and the desired outcome, FranConnect can propose a solution that best meets the customer’s business requirements.</p><h4 class=\"western\">Customer Initiated Integrations</h4><p>FranConnect makes available documented REST APIs for several Sky application modules. Providing the greatest degree of control, customers can use these APIs to develop and support custom integrations using their own in-house or third-party development resources.</p><h4 class=\"western\">Franconnect API</h4><p>The FranConnect API enables users to import and/or export data between FranConnect Sky and third-party applications. Using this API, you must make all HTTP calls using the standard HTTP POST method in \"x-www-form-urlencoded\" format. You must provide the input to the API as an XML string whereas the output can either be in XML or JSON format, depending on how you would like to receive the response in your application. Various operations can be performed with the API by appending (and, thereby, replacing) variables in the request URL. The FranConnect API supports the following operations: login, submodule, query, create, update, retrieve, delete, log, and logout.</p><p>To perform the create and/ or update operations, you must pass the attributes for the specific record as an xmlString. To perform the retrieve and/ or delete operations, you must specify the parameters and their values in the filterXML. Other parameters that are used to specify the request (such as module name and sub module name) must be appended in the request as URL parameters.</p><h4 class=\"western\">Getting Started</h4><p>Contact the Integrations team <a href=\"mailto:integrations@franconnect.com\">(integrations@franconnect.com)</a> to get the client ID, client secret, and redirect URI that are required to generate the access token.</p><h4 class=\"western\">Supported Modules</h4><p>The API provides access to all entities in the FranConnect system within the Sales(fs), Info Manager(fim), CRM(cm) and the Admin(admin) modules.</p><h4 class=\"western\">Rate Limits and Accounts</h4><p>The FranConnect API does not impose any rate limit restrictions at present, but the users are expected to retrieve data after certain interval and retrieve only the deltas (wherever applicable) so as to not overload the system. Retrieving a large dataset might result in slowness and impede the overall system performance.</p><h4 class=\"western\">Concurrent Requests</h4><p>The Franconnect API does not support concurrent requests and the requests must be made one at a time.</p><h4 class=\"western\">Testing</h4><p>You can perform testing in your UAT environment and then move the code over to your production environment. In case you don’t have a UAT environment, you can request for one from your customer advocate or by sending an email to our HelpDesk team <a href=\"mailto:helpdesk@franconnect.com\">(helpdesk@franconnect.com</a>). A temporary UAT environment can be provided to you, but there might be some cost associated with it.</p><p><span style=\"color: rgb(184, 49, 47);\"><strong>Important!</strong> This document uses <strong>Postman</strong> as the GUI client for testing the Franconnect API. However, you can emulate the API using your preferred programming language.</span></p>"
    },
    {
      "name": "Authentication",
      "description": "<p>Franconnect recommends you to use OAuth 2.0 authorization to authenticate to the Franconnect API.</p><p>Perform the following steps to set up the OAuth 2.0 authorization, using Postman:</p><ol><li>Select an API method.</li><li>Click the <strong>Authorization</strong> tab.&nbsp;</li>  <li>Select the option <strong>OAuth 2.0&nbsp;</strong>for the<strong>&nbsp;Type&nbsp;</strong>field.</li><li>Select the option<strong>&nbsp;</strong><strong>Request Headers</strong> for the <strong>Add authorization data to</strong> field.</li><li>Click <strong>Get New Access Token&nbsp;</strong>to generate request for a new token.</li><li>In the <strong>Get New Access Token&nbsp;</strong>dialog that appears, enter the details as explained in the following steps.<ol type=\"a\"> <li style=\"margin-left: 1px;\">Enter a name for your Access Token.</li><li style=\"margin-left: 1px;\">Select the <strong>Grant Type</strong> as <strong>Authorization Code</strong>.</li><li style=\"margin-left: 1px;\">Enter the callback URL that you want to be redirected to, once your application is authorized. The callback URL is also known as redirect URI. This URL should match the one that you use during the application registration process.<br>Example: Callback URL can be <a href=\"https%3A//oauth.powerbi.com/views/oauthredirect.html.\">https://oauth.powerbi.com/views/oauthredirect.html</a>.<br>To register your callback/redirect URL, contact <a href=\"mailto:integrations@franconnect.com\">integrations@franconnect.com</a></li><li style=\"margin-left: 1px;\">Enter the endpoint for the authorization server as the <strong>Auth URL</strong>. This is used to get the authorization code.<br>Example: Auth URL can be <a href=\"https%3A//auth.franconnectuat.net/userauth/oauth/authorize?response_type=code&amp;client_id=FRANC0NN3CT_API&amp;redirect_uri=https%3A//oauth.powerbi.com/views/oauthredirect.html\">https://auth.franconnectuat.net/userauth/oauth/authorize?response_type=code&amp;client_id=FRANC0NN3CT_API&amp;redirect_uri=https://oauth.powerbi.com/views/oauthredirect.html</a></li><li style=\"margin-left: 1px;\">Enter the endpoint for the authentication server in the <strong>Access Token URL&nbsp;</strong>field. This is used to exchange the authorization code for an access token.<br>Example: Access Token URL can be <a href=\"https%3A//auth.franconnectuat.net/userauth/oauth/token?X-tenantID=developers.franconnectdemo.net&amp;grant_type=authorization_code&amp;client_id=FRANC0NN3CT_API&amp;redirect_uri=https%3A//oauth.powerbi.com/views/oauthredirect.html\">https://auth.franconnectuat.net/userauth/oauth/token?X-tenantID=developers.franconnectdemo.net&amp;grant_type=authorization_code&amp;client_id=FRANC0NN3CT_API&amp;<br>redirect_uri=https://oauth.powerbi.com/views/oauthredirect.html</a></li><li style=\"margin-left: 1px;\">Enter the client identifier used to identify the client during the application registration process in the <strong>Client ID</strong> field. <br>Example: Client ID can be FRANC0NN3CT_API</li><li style=\"margin-left: 1px;\">Enter the client secret issued to the client during the application registration process in the <strong>Client Secret</strong> field.<br>Example: Client secret can be DDEEMVOE2L0O1P9E<br>Contact <a href=\"mailto:integrations@franconnect.com\">integrations@franconnect.com</a> to get your client identifier and client secret</li><li style=\"margin-left: 1px;\">Select the option <strong>Send as Basic Auth header</strong> for the <strong>Client Authentication&nbsp;</strong>field.</li></ol></li></ol><p>After adding all these details, when you request for a token, you are prompted to enter the following additional information: <strong>Company Code</strong>, <strong>Username</strong> and <strong>Password</strong>.</p><ol>  <li>If the login URL for your Franconnect System is <a href=\"https://developers.franconnectdemo.net/fc,\">https://developers.franconnectdemo.net/fc</a>, then the company code will be developers.franconnectdemo.net/fc  </li><li>Your username and password will be your login credentials for your Franconnect system</li></ol><p>If all the details provided under the <strong>Authorization </strong>tab are valid, then, the access token is generated that can be used for the API calls.</p>"
    },
    {
      "name": "Error Codes",
      "description": "<p>Franconnect uses different status and response codes to indicate the success or failure of an API request. In general, codes in the <code>2xx&nbsp;</code>range indicate success. Codes in the <code>4xx&nbsp;</code>range indicate an error in processing the request (such as a required parameter was invalid, incorrect XML format, and so on).</p><p>Following are the common error codes for the Franconnect API:</p><ul><li>    <p>400<strong> Invalid : &lt;parameter&gt;</strong> - Returned when the input parameter name is invalid</p></li><li><p>400<strong> Invalid XML format: {error}</strong> - Returned when the input XMLString is invalid</p></li><li><p>400 <strong>Request to {operation}{subModule} is not supported</strong> - Returned when some operation is restricted for a specific subModule</p></li> <li> <p>400 <strong>Invalid mandatory field : {field}</strong> - Returned when the value provided in XMLString is invalid for a mandatory field</p> </li><li><p>400 <strong>Invalid mandatory field :{custom_error}</strong> - Returned when invalid field value is provided in XMLString. For example, the end date is before the start date or the userID contains space(s)</p></li><li><p>401 <strong>Missing : &lt;parameter&gt; </strong> - Returned when a mandatory parameter is missing</p></li><li> <p>401 <strong>mandatory field : {field}</strong> - Returned when a mandatory field is missing in the XMLString.</p></li> <li><p>409 <strong>{subModule}already exists</strong> - Returned when you try to perform create operation for a subModule again and only one time submission is allowed for that subModule</p></li><li><p>411 <strong>Duplicate mandatory field : {field}</strong> - Returned when you try to input duplicate data</p></li><li><p>438 <strong>Invalid tag &lt;tagName&gt;</strong> - Returned when the &lt;tagName&gt; is invalid for the specified module and subModule</p></li><li><p>500 <strong>Database error</strong> - Returned when there is a database mapping issue</p></li><li><p>503 <strong>Service Unavailable</strong> - Returned when the system is undergoing maintenance</p></li></ul><p></p><p></p>"
    },
    {
      "name": "List of Sub-Modules",
      "description": "<p>You must use the \"submodule\" endpoint to get a list of all submodules / tabs available for a specific module.</p> <ul><li>Once you have the access token, you are authorized to make API calls to this  endpoint using the encrypted token.</li><li>The 'module' represents the entity type for which you want to get the list of sub modules. For example, 'fim' (for Info Manager), 'cm' (for CRM), 'fs' (for Sales) and 'admin' (for Admin).</li></ul>",
      "operationId": "List_of_Sub_Modules"
    },
    {
      "name": "List of Field Names",
      "description": "<p> You must use the \"query\" endpoint to generate an XML input sample. This XML sample must be used for manipulating various FranConnect System entities using the Create, Retrieve, Update, and Delete operations. Sample XML will adapt to contain the fields as per the form builder.</p><p>You must consider the following points before using the \"query\" endpoint:</p><ul><li>Once you have the access token, then only you are authorized to make a call to the \"query\" endpoint using this access token.</li><li>Request XMLs are generated after using this endpoint. You can use these Request XMLs to import/export/delete data into the FranConnect system. The 'module'represents the entity for which you want to retrieve the query xml string (for example, 'admin'for Admin, 'cm' for CRM, 'fs' for Sales, 'fim' for Info Manager. The subModule represents the subModule/tab that is required (for example, 'user' for Users, 'contact' for contacts, 'lead' for leads, and, 'franchisee' for locations). </li><li>The 'roleTypeForQuery' parameter specifies the user type( for example, Corporate User, Franchise User, and so on) that you want to create or update. However, for delete and retrieve operations, the 'roleTypeForQuery' parameter is not required. </li><li>The response is received in XML format only.</li><li>If internationalization (translation settings) is enabled, then the<strong> &lt;userLanguage&gt;</strong> element node appears in \"query\" endpoint for the create and update operations. Otherwise, your system's default language is considered as the default language for the API.</li></ul>",
      "operationId": "List_of_Field_Names"
    },
    {
      "name": "Admin",
      "description": "<p>The Admin module enables you to manage different types of users and their Franchisee locations. Using the Franconnect API, you can perform the Create, Retrieve, Update, and Delete operations for the following types of users: Corporate User, Regional User, Franchise User, and Divisional User. You can also perform the Create, Retrieve, and Update operations for the Franchisee locations.</p>"
    },
    {
      "name": "Sales",
      "description": "<p>The Sales Module enables you to keep a track of franchisee leads, and potential franchise owners. Using the Franconnect API, you can perform the Create, Retrieve, Update, and Delete operations for the following Sales entities:</p><ul><li><p>Lead information such as contact details, status, owner and qualification information, forecast details, and campaign history</p></li><li><p>Call and call compliance data</p></li><li><p>Mail and personal profile data</p></li><li><p>Qualification, real estate, visit, task and, remark data</p></li></ul>"
    },
    {
      "name": "Info Manager",
      "description": "<p>The Info Manager module provides a central focus for information and communications between the corporate office, regional management, and the franchise locations.</p><p>Using the Franconnect API, you can perform the Create, Retrieve, Update, and, Delete operations for the following Info Manager entities: Agreement, Call, Complaint, Contract Signing, Employee, Entity, Event, Financial, Franchisee, Guarantor, Insurance, Legal Violation, Lender, Mail, Marketing, Mystery Review, Owner, Real Estate, Remark, Renewal, Task, Termination, Territory, and Training.</p>"
    },
    {
      "name": "CRM",
      "description": "<p>The Sales module is used to streamline franchisee recruitment process and manage leads. It allows you to create leads, update leads’ details as they move along the franchise recruitment process, and finally award them franchisees.</p>>"
    },
    {
      "name": "Task",
      "description": "<p>The Sales module is used to streamline franchisee recruitment process and manage leads. It allows you to create leads, update leads’ details as they move along the franchise recruitment process, and finally award them franchisees.</p>\n>"
    },
    {
      "name": "Emails",
      "description": "<p>The Sales module is used to streamline franchisee recruitment process and manage leads. It allows you to create leads, update leads’ details as they move along the franchise recruitment process, and finally award them franchisees.</p>\n>"
    },
    {
      "name": "SMS",
      "description": "<p>The Sales module is used to streamline franchisee recruitment process and manage leads. It allows you to create leads, update leads’ details as they move along the franchise recruitment process, and finally award them franchisees.</p>\n>"
    },
    {
      "name": "Campaigns",
      "description": "<p>The Sales module is used to streamline franchisee recruitment process and manage leads. It allows you to create leads, update leads’ details as they move along the franchise recruitment process, and finally award them franchisees.</p>\n>"
    },
    {
      "name": "Email Campaigns",
      "description": "<p>The Sales module is used to streamline franchisee recruitment process and manage leads. It allows you to create leads, update leads’ details as they move along the franchise recruitment process, and finally award them franchisees.</p>\n>"
    },
    {
      "name": "SMS Campaigns",
      "description": "<p>The Sales module is used to streamline franchisee recruitment process and manage leads. It allows you to create leads, update leads’ details as they move along the franchise recruitment process, and finally award them franchisees.</p>\n>"
    },
    {
      "name": "Finance",
      "description": "<p>This API is built to allow users to automate the transfer of data between the FranConnect system&rsquo;s Finance module and their 3<sup>rd</sup> party Finance/ POS systems. FranConnect&rsquo;s APIs are RESTful in nature and support the transfer Create, Retrieve, Update, and Delete (CRUD) operations.</p>\n<h3 class=\"western\">Rate limits and accounts</h3>\n<p>Currently, FranConnect&rsquo;s REST APIs do not impose any rate limit restrictions but users are expected to retrieve data after certain interval and retrieve only the deltas (wherever applicable) so as to not overload the system. Retrieving a large dataset might result in slowness and impede the overall system performance.</p>\n<h3 class=\"western\">Concurrent Requests</h3>\n<p>Franconnect&rsquo;s APIs do not support concurrent requests and the API expects that the requests be served one at a time.</p>\n<h3 class=\"western\">Authentication</h3>\n<p>FranConnect supports OAuth 2.0 for authenticating requests before they can be used to perform CRUD operations using FranConnect&rsquo;s API. Further details on how to set up the authentication and generate the access token can be found <span style=\"color: #0563c1;\"><u><a href=\"#tag/Authentication\">here</a></u></span>.</p>"
    },
    {
      "name": "Franchise Number",
      "description": "<p class=\"western\">You can retrieve the Franchise Number either for a specific location or for all locations.</p>"
    },
    {
      "name": "Sales Reports",
      "description": "This API is to support the Finance Sales based operation"
    },
    {
      "name": "Royalties",
      "description": "This API is to support the Finance Royalty based operation"
    },
    {
      "name": "Payments",
      "description": "This API is to support the Finance Payment based operation"
    },
    {
      "name": "Profit and Loss Statements",
      "description": "This API is to support the Finance Profit and Loss based operation"
    }
  ],
  "x-tagGroups": [
    {
      "name": "",
      "tags": [
        "Introduction",
        "Authentication",
        "Franchise Number",
        "Retrieve Franchise Number",
        "Error Codes",
        "List of Sub-Modules",
        "Retrieve Sub-Modules",
        "List of Field Names",
        "Retrieve Schema",
        "Admin",
        "User",
        "Sales",
        "Lead",
        "Info Manager",
        "Franchisee",
        "CRM",
        "CRM Lead",
        "Contact",
        "Account",
        "Transactions",
        "Task",
        "Retrieve Task",
        "Emails",
        "Retrieve Emails",
        "SMS",
        "Retrieve SMS",
        "Campaigns",
        "Email Campaigns",
        "SMS Campaigns",
        "Finance",
        "Sales Reports",
        "Royalties",
        "Payments",
        "Profit and Loss Statements"
      ]
    }
  ],
  "paths": {
    "/dataservices/Retrieve Admin Sub-Modules": {
      "post": {
        "tags": [
          "Retrieve Sub-Modules"
        ],
        "summary": "Admin",
        "description": "<p class=\"western\">Use this operation to get a list of all submodules / tabs available for Admin.<p class=\"western\"><strong> API Endpoint&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;: </strong><context-path>/rest/dataservices/submodule?key=generatedAccessToken&module=admin&responseType=XML</p><p class=\"western\"><strong>Operation Name&nbsp;&nbsp;&nbsp;&nbsp;: </strong> POST</p>",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/components/requestBodies/AdminSubModuleArray"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "requestBody": {
          "$ref": "#/components/requestBodies/AdminSubModuleArray"
        }
      }
    },
    "/dataservices/Retrieve Sales submodules": {
      "post": {
        "tags": [
          "Retrieve Sub-Modules"
        ],
        "summary": "Sales",
        "description": "<p class=\"western\">Use this operation to get list of all submodules / tabs available for Sales.</p></p><p class=\"western\"><strong> API Endpoint&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;: </strong><context-path>/rest/dataservices/submodule?key=generatedAccessToken&module=fs&responseType=XML</p><p class=\"western\"><strong>Operation Name&nbsp;&nbsp;&nbsp;&nbsp;: </strong> POST</p><p><strong>Notes:</strong> In response, the \"element names\" specify the actual name that you must use to perform any operation and \"element value\" specifies the display name of subModule that is displayed in the system.<br />Format: &lt; element_name&gt; element_value&lt; /element_name&gt;<br />Example: &lt;user&gt;User&lt;/user&gt;<br />Here, <strong>user</strong> is the subModule key that is to be used in the API for user.</p>",
        "responses": {
          "default": {
            "description": "successful operation"
          }
        },
        "requestBody": {
          "$ref": "#/components/requestBodies/SalesSubModuleArray"
        }
      }
    },
    "/dataservices/Retrieve InfoMgr Sub-Modules": {
      "post": {
        "tags": [
          "Retrieve Sub-Modules"
        ],
        "summary": "Info Manager",
        "description": "<p class=\"western\">Use this operation to get list of all submodules / tabs available for Info Manager.</p><p class=\"western\"><strong> API Endpoint&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;: </strong><context-path>/rest/dataservices/submodule?key=generatedAccessToken&module=fim&responseType=XML</p><p class=\"western\"><strong>Operation Name&nbsp;&nbsp;&nbsp;&nbsp;: </strong> POST</p>",
        "responses": {
          "default": {
            "description": "successful operation"
          }
        },
        "requestBody": {
          "$ref": "#/components/requestBodies/InfoMgrSubModuleArray"
        }
      }
    },
    "/dataservices/Retrieve CRM Sub-Modules": {
      "post": {
        "tags": [
          "Retrieve Sub-Modules"
        ],
        "summary": "CRM",
        "description": "<p class=\"western\">Use this operation to get list of all submodules / tabs available for CRM.</p></p><p class=\"western\"><strong> API Endpoint&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;: </strong><context-path>/rest/dataservices/submodule?key=generatedAccessToken&module=cm&responseType=XML</p><p class=\"western\"><strong>Operation Name&nbsp;&nbsp;&nbsp;&nbsp;: </strong> POST</p>",
        "responses": {
          "default": {
            "description": "successful operation"
          }
        },
        "requestBody": {
          "$ref": "#/components/requestBodies/CRMSubModuleArray"
        }
      }
    },
    "/dataservices/Retrieve Schema": {
      "post": {
        "tags": [
          "Retrieve Schema"
        ],
        "summary": "Create",
        "description": "<p class=\"western\">This section contains an example of the “query” endpoint applied to retrieve fields that are available during the Create operation for the Admin submodule. </p><p>In a similar manner, the “query” endpoint can be applied to retrieve fields that are available during the Create operation for the Sales, Info Manager and CRM submodules.</p><p class=\"western\"><strong> API Endpoint&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;: </strong><context-path>/rest/dataservices/query?key=generatedAccessToken&module=admin&operation=create&roleTypeForQuery=1&subModule=user</p><p class=\"western\"><strong>Operation Name&nbsp;&nbsp;&nbsp;&nbsp;: </strong> POST</p>",
        "responses": {
          "default": {
            "description": "successful operation"
          }
        },
        "requestBody": {
          "$ref": "#/components/requestBodies/CreateSchemaArray"
        }
      }
    },
    "/dataservices/Retrieve Schema retrieve": {
      "post": {
        "tags": [
          "Retrieve Schema"
        ],
        "summary": "Retrieve",
        "description": "<p class=\"western\">This section contains an example of the “query” endpoint applied to retrieve fields that are available during the Retrieve operation for the Admin submodule. </p><p>In a similar manner, the “query” endpoint can be applied to retrieve fields that are available during the Retrieve operation for the Sales, Info Manager and CRM submodules.<p class=\"western\"><strong> API Endpoint&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;: </strong><context-path>/rest/dataservices/query?key=generatedAccessToken&module=admin&operation=retrieve&roleTypeForQuery=1&subModule=user</p><p class=\"western\"><strong>Operation Name&nbsp;&nbsp;&nbsp;&nbsp;: </strong> POST</p>",
        "responses": {
          "default": {
            "description": "successful operation"
          }
        },
        "requestBody": {
          "$ref": "#/components/requestBodies/RetrieveSchemaArray"
        }
      }
    },
    "/dataservices/Retrieve Schema update": {
      "post": {
        "tags": [
          "Retrieve Schema"
        ],
        "summary": "Update",
        "description": "<p class=\"western\">This section contains an example of the “query” endpoint applied to retrieve fields that are available during the Update operation for the Admin submodule. </p><p>In a similar manner, the “query” endpoint can be applied to retrieve fields that are available during the Update operation for the Sales, Info Manager and CRM submodules.</p><p class=\"western\"><strong> API Endpoint&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;: </strong><context-path>/rest/dataservices/query?key=generatedAccessToken&module=admin&operation=update&roleTypeForQuery=1&subModule=user</p><p class=\"western\"><strong>Operation Name&nbsp;&nbsp;&nbsp;&nbsp;: </strong> POST</p>",
        "responses": {
          "default": {
            "description": "successful operation"
          }
        },
        "requestBody": {
          "$ref": "#/components/requestBodies/UpdateSchemaArray"
        }
      }
    },
    "/dataservices/Retrieve Schema delete": {
      "post": {
        "tags": [
          "Retrieve Schema"
        ],
        "summary": "Delete",
        "description": "<p class=\"western\">This section contains an example of the “query” endpoint applied to retrieve fields that are available during the Delete operation for the Admin submodule. </p><p>In a similar manner, the “query” endpoint can be applied to retrieve fields that are available during the Delete operation for the Sales, Info Manager and CRM submodules.</p><p class=\"western\"><strong> API Endpoint&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;: </strong><context-path>/rest/dataservices/query?key=generatedAccessToken&module=admin&operation=delete&roleTypeForQuery=1&subModule=user</p><p class=\"western\"><strong>Operation Name&nbsp;&nbsp;&nbsp;&nbsp;: </strong> POST</p>",
        "responses": {
          "default": {
            "description": "successful operation"
          }
        },
        "requestBody": {
          "$ref": "#/components/requestBodies/DeleteSchemaArray"
        }
      }
    },
    "/common/franchisee": {
      "get": {
        "tags": [
          "Retrieve Franchise Number"
        ],
        "summary": "Retrieve for all Locations",
        "description": "</p><p class=\"western\"><strong>API Endpoint &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;: </strong>/common/franchisee</p><p class=\"western\"><strong>Operation Name&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;: </strong>GET</p><h4>To retrieve the Franchise Number, you must provide the following items in the header of the GET request: </h4><ol><li><p>\"Authorization\" as the key and its value in the format \"Bearer access_token\". This access_token is generated as a part of authentication.Click <u><a href=\"#tag/Authentication\">here</a></u> for details on the steps to generate the access token.</p></li><li><p>Specify &ldquo;Content-Type&rdquo; as the key and its value in the format &ldquo;application/json&rdquo;.</p></li><li><p>Specify &ldquo;X-TenantId&rdquo; as the key and its value based on your FranConnect system&rsquo;s URL. Click <u><a href=\"#tag/Authentication\">here</a></u>&nbsp;for details on identifying the &ldquo;X-TenantId&rdquo;.</p></li></ol><p class=\"western\">Performing the above mentioned steps will provide the franchise number and the franchise names of all the locations.</p>",
        "responses": {
          "default": {
            "description": "successful operation"
          }
        },
        "parameters": []
      }
    },
    "/common/franchisee/filter": {
      "post": {
        "tags": [
          "Retrieve Franchise Number"
        ],
        "summary": "Retrieve for a specific Location",
        "description": "</p><p class=\"western\"><strong>API Endpoint &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;: </strong>/common/franchisee/filter</p><p class=\"western\"><strong>Operation Name&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;: </strong>POST</p><h4>To retrieve the Franchise Number for a specific location, you must provide the following items in the header of the POST request: </h4><ol><li><p>\"Authorization\" as the key and its value in the format \"Bearer access_token\". This access_token is generated as a part of authentication. Click <u><a href=\"#tag/Authentication\">here</a></u> for details on the steps to generate the access token.</p></li><li><p>Specify &ldquo;Content-Type&rdquo; as the key and its value in the format &ldquo;application/json&rdquo;.</p></li><li><p>Specify &ldquo;X-TenantId&rdquo; as the key and its value based on your FranConnect system&rsquo;s URL. Click <u><a href=\"#tag/Authentication\">here</a></u>&nbsp;for details on identifying the &ldquo;X-TenantId&rdquo;.</p></li></ol><p class=\"western\">You can specify any of the following as the filter criteria in the body of the request: areas, countries, divisions, entities, fields, and franchiseeNos. Performing the above mentioned steps will provide the franchise number and the franchise name for the required location.</p>",
        "responses": {
          "default": {
            "description": "successful operation"
          }
        },
        "requestBody": {
          "$ref": "#/components/requestBodies/FSCreateLeadArray"
        }
      }
    },
    "/dataservices/create User": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Create",
        "description": "<p class=\"western\">This section contains an example of the Create operation performed for adding one type of user. In a similar manner, the Create operation can be performed to add the different types of users, and franchisee locations. </p><p class=\"western\"><strong> API Endpoint&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;: </strong><context-path>/rest/dataservices/create?key=generatedAccessToken&module=admin&subModule=user&XMLString=requiredXMLString&responseType=XML</p><p class=\"western\"><strong>Operation Name: </strong> POST</p><h4 class=\"western\">Prerequisites to perform a Create operation</h4><p class=\"western\">To perform a Create operation for adding a user using the Franconnect API, you must make a POST request on the context path. The following items must be used as path parameters:</p><ol><li><p>An encrypted secure token as a key. Steps on how a secure token is generated is documented <u><a href=\"#tag/Authentication\">here</a></u>.</p></li><li><p>The module for which the Create operation is being performed. In this case, the module to be used is “admin”</u>.</p></li><li><p>The subModule for which the Create operation is being performed. A list of all subModules can be retrieved from the “submodule” endpoint mentioned <span style=\"color: #0563c1;\"><u><a href=\"#tag/List-of-Sub-Modules\">here</a></u></span>. In this case, the submodule to be used is “user”.</p></li><li><p>Response type as XML or JSON, depending on the type of response that is desired</u>.</p></li><li><p class=\"western\">XMLString that would contain the attribute names and their values in the request that is to be used to add a user. In order to determine the parameter names/ schema, a query operation is to be performed with the corresponding module and submodule name and operation as Create. Details on how the query operation is to be performed is mentioned <u><a href=\"#tag/List-of-Field-Names\">here.</a></u></li></ol></p>",
        "responses": {
          "default": {
            "description": "successful operation"
          }
        },
        "requestBody": {
          "$ref": "#/components/requestBodies/FSCreateLeadArray"
        }
      }
    },
    "/dataservices/retrieve User": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Retrieve",
        "description": "<p class=\"western\">This section contains an example of the Retrieve operation performed for retrieving the details of a user. In a similar manner, the Retrieve operation can be performed to retrieve information for a franchisee location. </p><p class=\"western\"><strong> API Endpoint&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;: </strong><context-path>/rest/dataservices/retrieve?key=generatedAccessToken&module=admin&subModule=user&XMLString=requiredXMLString&responseType=XML</p><p class=\"western\"><strong>Operation Name&nbsp;&nbsp;: </strong> POST</p><h4 class=\"western\">Prerequisites to perform a Retrieve operation</h4><p class=\"western\">To perform a Retrieve operation for retrieving the details of a user using the Franconnect API, you must make a POST request on the context path. The following items must be used as path parameters:</p><ol><li><p>An encrypted secure token as a key. Steps on how a secure token is generated is documented <u><a href=\"#tag/Authentication\">here</a></u>.</p></li><li><p>The module for which the Retrieve operation is being performed. In this case, the module to be used is “admin”</u>.</p></li><li><p>The subModule for which the Retrieve operation is being performed. A list of all subModules can be retrieved from the “submodule” endpoint mentioned <span style=\"color: #0563c1;\"><u><a href=\"#tag/List-of-Sub-Modules\">here</a></u></span>. In this case, the submodule to be used is “user”.</p></li><li><p>Response type as XML or JSON, depending on the type of response that is desired</u>.</p></li><li><p class=\"western\">XMLString that would contain the attribute names and their values in the request that is to be used to retrieve a user. In order to determine the parameter names/ schema, a query operation is to be performed with the corresponding module and submodule name and operation as Retrieve. Details on how the query operation is to be performed is mentioned <u><a href=\"#tag/List-of-Field-Names\">here.</a></u></li></ol></p>",
        "responses": {
          "default": {
            "description": "successful operation"
          }
        },
        "requestBody": {
          "$ref": "#/components/requestBodies/FSCreateLeadArray"
        }
      }
    },
    "/dataservices/update User": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Update",
        "description": "<p class=\"western\">This section contains an example of the Update operation performed for updating the details of a user. In a similar manner, the Update operation can be performed to update information for a franchisee location. </p><p class=\"western\"><strong> API Endpoint&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;: </strong><context-path>/rest/dataservices/update?key=generatedAccessToken&module=admin&subModule=user&XMLString=requiredXMLString&responseType=XML</p><p class=\"western\"><strong>Operation Name&nbsp;: </strong> POST</p><h4 class=\"western\">Prerequisites to perform an Update operation</h4><p class=\"western\">To perform an Update operation for updating the details of a user using the Franconnect API, you must make a POST request on the context path. The following items must be used as path parameters:</p><ol><li><p>An encrypted secure token as a key. Steps on how a secure token is generated is documented <u><a href=\"#tag/Authentication\">here</a></u>.</p></li><li><p>The module for which the Update operation is being performed. In this case, the module to be used is “admin”</u>.</p></li><li><p>The subModule for which the Update operation is being performed. A list of all subModules can be retrieved from the “submodule” endpoint mentioned <span style=\"color: #0563c1;\"><u><a href=\"#tag/List-of-Sub-Modules\">here</a></u></span>. In this case, the submodule to be used is “user”.</p></li><li><p>Response type as XML or JSON, depending on the type of response that is desired</u>.</p></li><li><p class=\"western\">XMLString that would contain the attribute names and their values in the request that is to be used to update a user. In order to determine the parameter names/ schema, a query operation is to be performed with the corresponding module and submodule name and operation as Update. Details on how the query operation is to be performed is mentioned <u><a href=\"#tag/List-of-Field-Names\">here.</a></u></li></ol></p>",
        "responses": {
          "default": {
            "description": "successful operation"
          }
        },
        "requestBody": {
          "$ref": "#/components/requestBodies/FSCreateLeadArray"
        }
      }
    },
    "/dataservices/Delete User": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Delete",
        "description": "<p class=\"western\">This section contains an example of the Delete operation performed for deleting the details of a user. Note that the Franconnect API does not support the deletion of a Franchisee location. </p><p class=\"western\"><strong> API Endpoint&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;: </strong><context-path>/rest/dataservices/dekete?key=generatedAccessToken&module=admin&subModule=user&XMLString=requiredXMLString&responseType=XML</p><p class=\"western\"><strong>Operation Name&nbsp;: </strong> POST</p><h4 class=\"western\">Prerequisites to perform a Delete operation</h4><p class=\"western\">To perform a Delete operation for deleting the details of a user using the Franconnect API, you must make a POST request on the context path. The following items must be used as path parameters:</p><ol><li><p>An encrypted secure token as a key. Steps on how a secure token is generated is documented <u><a href=\"#tag/Authentication\">here</a></u>.</p></li><li><p>The module for which the Delete operation is being performed. In this case, the module to be used is “admin”</u>.</p></li><li><p>The subModule for which the Delete operation is being performed. A list of all subModules can be retrieved from the “submodule” endpoint mentioned <span style=\"color: #0563c1;\"><u><a href=\"#tag/List-of-Sub-Modules\">here</a></u></span>. In this case, the submodule to be used is “user”.</p></li><li><p>Response type as XML or JSON, depending on the type of response that is desired</u>.</p></li><li><p class=\"western\">XMLString that would contain the attribute names and their values in the request that is to be used to delete a location. In order to determine the parameter names/ schema, a query operation is to be performed with the corresponding module and submodule name and operation as Delete. Details on how the query operation is to be performed is mentioned <u><a href=\"#tag/List-of-Field-Names\">here.</a></u></li></ol></p>",
        "responses": {
          "default": {
            "description": "successful operation"
          }
        },
        "requestBody": {
          "$ref": "#/components/requestBodies/FSCreateLeadArray"
        }
      }
    },
    "/dataservices/create lead": {
      "post": {
        "tags": [
          "Lead"
        ],
        "summary": "Create",
        "description": "<p class=\"western\">This section contains an example of the Create operation performed for adding a Sales lead. In a similar manner, the Create operation can be performed to add other details for the lead. </p><p class=\"western\"><strong> API Endpoint&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;: </strong><context-path>/rest/dataservices/create?key=generatedAccessToken&module=fs&subModule=lead&XMLString=requiredXMLString&responseType=XML</p><p class=\"western\"><strong>Operation Name&nbsp;&nbsp;&nbsp;&nbsp;: </strong> POST</p><h4 class=\"western\">Prerequisites to perform a Create operation</h4><p class=\"western\">To perform a Create operation for adding a lead using the Franconnect API, you must make a POST request on the context path. The following items must be used as path parameters:</p><ol><li><p>An encrypted secure token as a key. Steps on how a secure token is generated is documented <u><a href=\"#tag/Authentication\">here</a></u>.</p></li><li><p>The module for which the Create operation is being performed. In this case, the module to be used is “fs”</u>.</p></li><li><p>The subModule for which the Create operation is being performed. A list of all subModules can be retrieved from the “submodule” endpoint mentioned <span style=\"color: #0563c1;\"><u><a href=\"#tag/List-of-Sub-Modules\">here</a></u></span>. In this case, the submodule to be used is “lead”.</p></li><li><p>Response type as XML or JSON, depending on the type of response that is desired</u>.</p></li><li><p class=\"western\">XMLString that would contain the attribute names and their values in the request that is to be used to add a lead. In order to determine the parameter names/ schema, a query operation is to be performed with the corresponding module and submodule name and operation as Create. Details on how the query operation is to be performed is mentioned <u><a href=\"#tag/List-of-Field-Names\">here.</a></u></li></ol></p><p>Notes:</p><ul><li>Here, &lt;division&gt; will be considered only if Division is enabled in FranConnect system.</li><li>Reference Id of owner (Chris Barlow) can also be provided instead of providing name in &lt;leadOwnerID&gt;. This will ensure owner with provided referenceId will be assigned as lead owner, as owners with same name can exist, but all owners have different referenceIds.Owner referenceId can be retrieved by performing retrieve operation with 'admin&rsquo; as module and 'user&rsquo; as subModule.</li><li>In case the email ID of the lead matches that of any existing lead in the system, the email subscription of the lead that is being created would be the same as the email subscription of the existing lead.</li></ul></p>",
        "responses": {
          "default": {
            "description": "successful operation"
          }
        },
        "requestBody": {
          "$ref": "#/components/requestBodies/FSCreateLeadArray"
        }
      }
    },
    "/dataservices/retrieve lead": {
      "post": {
        "tags": [
          "Lead"
        ],
        "summary": "Retrieve",
        "description": "<p class=\"western\">This section contains an example of the Retrieve operation performed for retrieving the details of a lead. In a similar manner, the Retrieve operation can be performed to retrieve other details for the lead. </p><p class=\"western\"><strong> API Endpoint&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;: </strong><context-path>/rest/dataservices/retrieve?key=generatedAccessToken&module=fs&subModule=lead&XMLString=requiredXMLString&responseType=XML</p><p class=\"western\"><strong>Operation Name&nbsp;&nbsp;: </strong> POST</p><h4 class=\"western\">Prerequisites to perform a Retrieve operation</h4><p class=\"western\">To perform a Retrieve operation for retrieving the details of a lead using the Franconnect API, you must make a POST request on the context path. The following items must be used as path parameters:</p><ol><li><p>An encrypted secure token as a key. Steps on how a secure token is generated is documented <u><a href=\"#tag/Authentication\">here</a></u>.</p></li><li><p>The module for which the Retrieve operation is being performed. In this case, the module to be used is “fs”</u>.</p></li><li><p>The subModule for which the Retrieve operation is being performed. A list of all subModules can be retrieved from the “submodule” endpoint mentioned <span style=\"color: #0563c1;\"><u><a href=\"#tag/List-of-Sub-Modules\">here</a></u></span>. In this case, the submodule to be used is “lead”.</p></li><li><p>Response type as XML or JSON, depending on the type of response that is desired</u>.</p></li><li><p class=\"western\">XMLString that would contain the attribute names and their values in the request that is to be used to retrieve a lead. In order to determine the parameter names/ schema, a query operation is to be performed with the corresponding module and submodule name and operation as Retrieve. Details on how the query operation is to be performed is mentioned <u><a href=\"#tag/List-of-Field-Names\">here.</a></u></li></ol></p>",
        "responses": {
          "default": {
            "description": "successful operation"
          }
        },
        "requestBody": {
          "$ref": "#/components/requestBodies/FSRetrieveLeadArray"
        }
      }
    },
    "/dataservices/update lead": {
      "post": {
        "tags": [
          "Lead"
        ],
        "summary": "Update",
        "description": "<p class=\"western\">This section contains an example of the Update operation performed for updating a Sales lead. In a similar manner, the Update operation can be performed to modify other details for the lead. </p><p class=\"western\"><strong> API Endpoint&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;: </strong><context-path>/rest/dataservices/update?key=generatedAccessToken&module=fs&subModule=lead&XMLString=requiredXMLString&responseType=XML</p><p class=\"western\"><strong>Operation Name&nbsp;&nbsp;&nbsp;&nbsp;: </strong> POST</p><h4 class=\"western\">Prerequisites to perform an Update operation</h4><p class=\"western\">To perform an Update operation for updating a lead using the Franconnect API, you must make a POST request on the context path. The following items must be used as path parameters:</p><ol><li><p>An encrypted secure token as a key. Steps on how a secure token is generated is documented <u><a href=\"#tag/Authentication\">here</a></u>.</p></li><li><p>The module for which the Update operation is being performed. In this case, the module to be used is “fs”</u>.</p></li><li><p>The subModule for which the Update operation is being performed. A list of all subModules can be retrieved from the “submodule” endpoint mentioned <span style=\"color: #0563c1;\"><u><a href=\"#tag/List-of-Sub-Modules\">here</a></u></span>. In this case, the submodule to be used is “lead”.</p></li><li><p>Response type as XML or JSON, depending on the type of response that is desired</u>.</p></li><li><p class=\"western\">XMLString that would contain the attribute names and their values in the request that is to be used to update a lead. In order to determine the parameter names/ schema, a query operation is to be performed with the corresponding module and submodule name and operation as Update. Details on how the query operation is to be performed is mentioned <u><a href=\"#tag/List-of-Field-Names\">here.</a></u></li></ol></p>",
        "responses": {
          "default": {
            "description": "successful operation"
          }
        },
        "requestBody": {
          "$ref": "#/components/requestBodies/FSUpdateLeadArray"
        }
      }
    },
    "/dataservices/Delete lead": {
      "post": {
        "tags": [
          "Lead"
        ],
        "summary": "Delete",
        "description": "<p class=\"western\">This section contains an example of the Delete operation performed for deleting a Sales lead. In a similar manner, the Delete operation can be performed to delete other details for the lead. </p><p class=\"western\"><strong> API Endpoint&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;: </strong><context-path>/rest/dataservices/delete?key=generatedAccessToken&module=fs&subModule=lead&XMLString=requiredXMLString&responseType=XML</p><p class=\"western\"><strong>Operation Name&nbsp;&nbsp;&nbsp;&nbsp;: </strong> POST</p><h4 class=\"western\">Prerequisites to perform a Delete operation</h4><p class=\"western\">To perform a Delete operation for deleting a lead using the Franconnect API, you must make a POST request on the context path. The following items must be used as path parameters:</p><ol><li><p>An encrypted secure token as a key. Steps on how a secure token is generated is documented <u><a href=\"#tag/Authentication\">here</a></u>.</p></li><li><p>The module for which the Delete operation is being performed. In this case, the module to be used is “fs”</u>.</p></li><li><p>The subModule for which the Delete operation is being performed. A list of all subModules can be retrieved from the “submodule” endpoint mentioned <span style=\"color: #0563c1;\"><u><a href=\"#tag/List-of-Sub-Modules\">here</a></u></span>. In this case, the submodule to be used is “lead”.</p></li><li><p>Response type as XML or JSON, depending on the type of response that is desired</u>.</p></li><li><p class=\"western\">XMLString that would contain the attribute names and their values in the request that is to be used to delete a lead. In order to determine the parameter names/ schema, a query operation is to be performed with the corresponding module and submodule name and operation as Delete. Details on how the query operation is to be performed is mentioned <u><a href=\"#tag/List-of-Field-Names\">here.</a></u></li></ol></p>",
        "responses": {
          "default": {
            "description": "successful operation"
          }
        },
        "requestBody": {
          "$ref": "#/components/requestBodies/FSCreateLeadArray"
        }
      }
    },
    "/dataservices/create Franchisee": {
      "post": {
        "tags": [
          "Franchisee"
        ],
        "summary": "Create",
        "description": "<p class=\"western\">This section contains an example of the Create operation performed for adding a franchisee location through the Info Manager module. In a similar manner, the Create operation can be performed to add the different Info Manager entities.</p><p class=\"western\"><strong> API Endpoint&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;: </strong><context-path>/rest/dataservices/create?key=generatedAccessToken&module=fim&subModule=franchisee&XMLString=requiredXMLString&responseType=XML</p><p class=\"western\"><strong>Operation Name&nbsp;&nbsp;&nbsp;&nbsp;: </strong> POST</p><h4 class=\"western\">Prerequisites to perform a Create operation</h4><p class=\"western\">To perform a Create operation for adding a franchisee location using the Franconnect API, you must make a POST request on the context path. The following items must be used as path parameters:</p><ol><li><p>An encrypted secure token as a key. Steps on how a secure token is generated is documented <u><a href=\"#tag/Authentication\">here</a></u>.</p></li><li><p>The module for which the Create operation is being performed. In this case, the module to be used is “fim”</u>.</p></li><li><p>The subModule for which the Create operation is being performed. A list of all subModules can be retrieved from the “submodule” endpoint mentioned <span style=\"color: #0563c1;\"><u><a href=\"#tag/List-of-Sub-Modules\">here</a></u></span>. In this case, the submodule to be used is “franchisee”.</p></li><li><p>Response type as XML or JSON, depending on the type of response that is desired</u>.</p></li><li><p class=\"western\">XMLString that would contain the attribute names and their values in the request that is to be used to add a franchisee location. In order to determine the parameter names/ schema, a query operation is to be performed with the corresponding module and submodule name and operation as Create. Details on how the query operation is to be performed is mentioned <u><a href=\"#tag/List-of-Field-Names\">here.</a></u></li></ol></p>",
        "responses": {
          "default": {
            "description": "successful operation"
          }
        },
        "requestBody": {
          "$ref": "#/components/requestBodies/FSCreateLeadArray"
        }
      }
    },
    "/dataservices/retrieve Franchisee": {
      "post": {
        "tags": [
          "Franchisee"
        ],
        "summary": "Retrieve",
        "description": "<p class=\"western\">This section contains an example of the Retrieve operation performed for retrieving a franchisee location through the Info Manager module. In a similar manner, the Retrieve operation can be performed to Retrieve the different Info Manager entities.</p><p class=\"western\"><strong> API Endpoint&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;: </strong><context-path>/rest/dataservices/retrieve?key=generatedAccessToken&module=fim&subModule=franchisee&XMLString=requiredXMLString&responseType=XML</p><p class=\"western\"><strong>Operation Name&nbsp;&nbsp;&nbsp;&nbsp;: </strong> POST</p><h4 class=\"western\">Prerequisites to perform a Retrieve operation</h4><p class=\"western\">To perform a Retrieve operation for retrieving a franchisee location using the Franconnect API, you must make a POST request on the context path. The following items must be used as path parameters:</p><ol><li><p>An encrypted secure token as a key. Steps on how a secure token is generated is documented <u><a href=\"#tag/Authentication\">here</a></u>.</p></li><li><p>The module for which the Retrieve operation is being performed. In this case, the module to be used is “fim”</u>.</p></li><li><p>The subModule for which the Retrieve operation is being performed. A list of all subModules can be retrieved from the “submodule” endpoint mentioned <span style=\"color: #0563c1;\"><u><a href=\"#tag/List-of-Sub-Modules\">here</a></u></span>. In this case, the submodule to be used is “franchisee”.</p></li><li><p>Response type as XML or JSON, depending on the type of response that is desired</u>.</p></li><li><p class=\"western\">XMLString that would contain the attribute names and their values in the request that is to be used to retrieve a franchisee location. In order to determine the parameter names/ schema, a query operation is to be performed with the corresponding module and submodule name and operation as Retrieve. Details on how the query operation is to be performed is mentioned <u><a href=\"#tag/List-of-Field-Names\">here.</a></u></li></ol></p>",
        "responses": {
          "default": {
            "description": "successful operation"
          }
        },
        "requestBody": {
          "$ref": "#/components/requestBodies/FSCreateLeadArray"
        }
      }
    },
    "/dataservices/update Franchisee": {
      "post": {
        "tags": [
          "Franchisee"
        ],
        "summary": "Update",
        "description": "<p class=\"western\">This section contains an example of the Update operation performed for updating a franchisee location through the Info Manager module. In a similar manner, the Update operation can be performed to update the different Info Manager entities.</p><p class=\"western\"><strong> API Endpoint&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;: </strong><context-path>/rest/dataservices/update?key=generatedAccessToken&module=fim&subModule=franchisee&XMLString=requiredXMLString&responseType=XML</p><p class=\"western\"><strong>Operation Name&nbsp;&nbsp;&nbsp;&nbsp;: </strong> POST</p><h4 class=\"western\">Prerequisites to perform an Update operation</h4><p class=\"western\">To perform an Update operation for updating a franchisee location using the Franconnect API, you must make a POST request on the context path. The following items must be used as path parameters:</p><ol><li><p>An encrypted secure token as a key. Steps on how a secure token is generated is documented <u><a href=\"#tag/Authentication\">here</a></u>.</p></li><li><p>The module for which the Update operation is being performed. In this case, the module to be used is “fim”</u>.</p></li><li><p>The subModule for which the Update operation is being performed. A list of all subModules can be retrieved from the “submodule” endpoint mentioned <span style=\"color: #0563c1;\"><u><a href=\"#tag/List-of-Sub-Modules\">here</a></u></span>. In this case, the submodule to be used is “franchisee”.</p></li><li><p>Response type as XML or JSON, depending on the type of response that is desired</u>.</p></li><li><p class=\"western\">XMLString that would contain the attribute names and their values in the request that is to be used to update a franchisee location. In order to determine the parameter names/ schema, a query operation is to be performed with the corresponding module and submodule name and operation as Update. Details on how the query operation is to be performed is mentioned <u><a href=\"#tag/List-of-Field-Names\">here.</a></u></li></ol></p>",
        "responses": {
          "default": {
            "description": "successful operation"
          }
        },
        "requestBody": {
          "$ref": "#/components/requestBodies/FSCreateLeadArray"
        }
      }
    },
    "/dataservices/Delete Franchisee": {
      "post": {
        "tags": [
          "Franchisee"
        ],
        "summary": "Delete",
        "description": "<p class=\"western\">This section contains an example of the Delete operation performed for deleting a franchisee location through the Info Manager module. Note that the Franconnect API does not support the deletion of a franchisee location. However, the Delete operation can be performed to delete the other Info Manager entities.</p><p class=\"western\"><strong> API Endpoint&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;: </strong><context-path>/rest/dataservices/delete?key=generatedAccessToken&module=fim&subModule=franchisee&XMLString=requiredXMLString&responseType=XML</p><p class=\"western\"><strong>Operation Name&nbsp;&nbsp;&nbsp;&nbsp;: </strong> POST</p><h4 class=\"western\">Prerequisites to perform a Delete operation</h4><p class=\"western\">To perform a Delete operation for deleting a sub module under the Info Manager module using the Franconnect API, you must make a POST request on the context path. The following items must be used as path parameters:</p><ol><li><p>An encrypted secure token as a key. Steps on how a secure token is generated is documented <u><a href=\"#tag/Authentication\">here</a></u>.</p></li><li><p>The module for which the Delete operation is being performed. In this case, the module to be used is “fim”</u>.</p></li><li><p>The subModule for which the Delete operation is being performed. A list of all subModules can be retrieved from the “submodule” endpoint mentioned <span style=\"color: #0563c1;\"><u><a href=\"#tag/List-of-Sub-Modules\">here</a></u></span>. In this case, the submodule to be used is “franchisee”.</p></li><li><p>Response type as XML or JSON, depending on the type of response that is desired</u>.</p></li><li><p class=\"western\">XMLString that would contain the attribute names and their values in the request that is to be used to delete a sub module. In order to determine the parameter names/ schema, a query operation is to be performed with the corresponding module and submodule name and operation as Delete. Details on how the query operation is to be performed is mentioned <u><a href=\"#tag/List-of-Field-Names\">here.</a></u></li></ol></p>",
        "responses": {
          "default": {
            "description": "successful operation"
          }
        },
        "requestBody": {
          "$ref": "#/components/requestBodies/FSCreateLeadArray"
        }
      }
    },
    "/dataservices/create CRM Lead": {
      "post": {
        "tags": [
          "CRM Lead"
        ],
        "summary": "Create",
        "description": "<p class=\"western\">The create endpoint is used to add Sales Compliance data in the system. </p><p class=\"western\"><strong>Production API Endpoint : </strong><span style=\"color: #0563c1;\"><u><a href=\"https://skyapi.franconnect.net/manage-finance/sales/franchiseeNo/%7Bid%7D/reportPeriod\"><context-path>/rest/dataservices/create</a></u></span></p><p class=\"western\"><strong>UAT API Endpoint &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; : </strong><span style=\"color: #0563c1;\"><u><a href=\"https://skyapi.franconnectuat.net/manage-finance/sales/franchiseeNo/%7Bid%7D/reportPeriod\"><context-path>/rest/dataservices/create</a></u></span></p><p class=\"western\"><strong>Operation Name &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; : </strong>POST</p><p class=\"western\">&nbsp;</p><p class=\"western\">In order to add Sales Compliance data using the REST API, the user should make a POST request on the context path. The following items should be used as path parameters:</p><ol><li><p>An encrypted secure token as a key. Steps on how a secure token is generated is documented <u><a href=\"#tag/Authentication\">here</a></u>.</p></li><li><p>The module for which the \"create\" operation is being performed. In this case, the module to be used is “fs”</u>.</p></li><li><p>The subModule for which the \"create\" operation is being performed. A list of all subModules can be retrieved from the “submodule” endpoint mentioned <u><a href=\"#tag/Retrieve-Franchise-Number\">here</a></u>.</p></li><li><p>Response type as XML or JSON, depending on the type of response that is desired</u>.</p></li><li><p class=\"western\">XMLString that would contain the parameters/ details of the request that is to be used to add Sales Compliance data. In order to determine the parameter names/ schema, a query operation is to be performed with the corresponding module and submodule names and operation as “create”. Details on how the query operation is to be performed is mentioned <u><a href=\"#tag/Retrieve-Franchise-Number\">here.</a></u></li></ol></p>",
        "responses": {
          "default": {
            "description": "successful operation"
          }
        },
        "requestBody": {
          "$ref": "#/components/requestBodies/FSCreateLeadArray"
        }
      }
    },
    "/dataservices/retrieve CRM Lead": {
      "post": {
        "tags": [
          "CRM Lead"
        ],
        "summary": "Retrieve",
        "description": "<p class=\"western\">The retrieve endpoint is used to retrieve the Sales Compliance data. </p><p class=\"western\"><strong>Production API Endpoint : </strong><span style=\"color: #0563c1;\"><u><a href=\"https://skyapi.franconnect.net/manage-finance/sales/franchiseeNo/%7Bid%7D/reportPeriod\"><context-path>/rest/dataservices/retrieve</a></u></span></p><p class=\"western\"><strong>UAT API Endpoint &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; : </strong><span style=\"color: #0563c1;\"><u><a href=\"https://skyapi.franconnectuat.net/manage-finance/sales/franchiseeNo/%7Bid%7D/reportPeriod\"><context-path>/rest/dataservices/retrieve</a></u></span></p><p class=\"western\"><strong>Operation Name &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; : </strong>POST</p><p class=\"western\">&nbsp;</p><p class=\"western\">In order to retrieve Sales Compliance data using the REST API, the user should make a POST request on the context path. The following items should be used as path parameters:</p><ol><li><p>An encrypted secure token as a key. Steps on how a secure token is generated is documented <u><a href=\"#tag/Authentication\">here</a></u>.</p></li><li><p>The module for which the retrieve operation is being performed. In this case, the module to be used is “fs”</u>.</p></li><li><p>The subModule for which the retrieve operation is being performed. A list of all subModules can be retrieved from the “submodule” endpoint mentioned <u><a href=\"#tag/Retrieve-Franchise-Number\">here</a></u>.</p></li><li><p>Response type as XML or JSON, depending on the type of response that is desired</u>.</p></li><li><p class=\"western\">filterXML that would contain the parameters/ details of the request that is to be used to retrieve the Sales Compliance data. In order to determine the parameter names/ schema, a query operation is to be performed with the corresponding module and submodule names and operation as “retrieve”. Details on how the query operation is to be performed is mentioned <u><a href=\"#tag/Retrieve-Franchise-Number\">here</a></u>.</li>.</ol></p>",
        "responses": {
          "default": {
            "description": "successful operation"
          }
        },
        "requestBody": {
          "$ref": "#/components/requestBodies/FSCreateLeadArray"
        }
      }
    },
    "/dataservices/update CRM Lead": {
      "post": {
        "tags": [
          "CRM Lead"
        ],
        "summary": "Update",
        "description": "<p class=\"western\">The update endpoint is used to update the Sales Compliance data. </p><p class=\"western\"><strong>Production API Endpoint : </strong><span style=\"color: #0563c1;\"><u><a href=\"https://skyapi.franconnect.net/manage-finance/sales/franchiseeNo/%7Bid%7D/reportPeriod\"><context-path>/rest/dataservices/update</a></u></span></p><p class=\"western\"><strong>UAT API Endpoint &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; : </strong><span style=\"color: #0563c1;\"><u><a href=\"https://skyapi.franconnectuat.net/manage-finance/sales/franchiseeNo/%7Bid%7D/reportPeriod\"><context-path>/rest/dataservices/update</a></u></span></p><p class=\"western\"><strong>Operation Name &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; : </strong>POST</p><p class=\"western\">&nbsp;</p><p class=\"western\">In order to update the Sales Compliance data using the REST API, the user should make a POST request on the context path. The following items should be used as path parameters:</p><ol><li><p>An encrypted secure token as a key. Steps on how a secure token is generated is documented <u><a href=\"#tag/Authentication\">here</a></u>.</p></li><li><p>The module for which the update operation is being performed. In this case, the module to be used is “fs”</u>.</p></li><li><p>The subModule for which the update operation is being performed. A list of all subModules can be retrieved from the “submodule” endpoint mentioned <u><a href=\"#tag/Retrieve-Franchise-Number\">here</a></u>.</p></li><li><p>Response type as XML or JSON, depending on the type of response that is desired</u>.</p></li><li><p class=\"western\">XMLString that would contain the parameters/ details of the request that is to be used to update the Sales Compliance data. In order to determine the parameter names/ schema, a query operation is to be performed with the corresponding module and submodule names and operation as “update”. Details on how the query operation is to be performed is mentioned <u><a href=\"#tag/Retrieve-Franchise-Number\">here</a></u>.</li></ol></p>",
        "responses": {
          "default": {
            "description": "successful operation"
          }
        },
        "requestBody": {
          "$ref": "#/components/requestBodies/FSCreateLeadArray"
        }
      }
    },
    "/dataservices/Delete CRM Lead": {
      "post": {
        "tags": [
          "CRM Lead"
        ],
        "summary": "Delete",
        "description": "<p class=\"western\">The delete endpoint is used to delete Sales Compliance data from the system. </p><p class=\"western\"><strong>Production API Endpoint : </strong><span style=\"color: #0563c1;\"><u><a href=\"https://skyapi.franconnect.net/manage-finance/sales/franchiseeNo/%7Bid%7D/reportPeriod\"><context-path>/rest/dataservices/delete</a></u></span></p><p class=\"western\"><strong>UAT API Endpoint &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; : </strong><span style=\"color: #0563c1;\"><u><a href=\"https://skyapi.franconnectuat.net/manage-finance/sales/franchiseeNo/%7Bid%7D/reportPeriod\"><context-path>/rest/dataservices/delete</a></u></span></p><p class=\"western\"><strong>Operation Name &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; : </strong>POST</p><p class=\"western\">&nbsp;</p><p class=\"western\">In order to delete Sales Compliance data using the REST API, the user should make a POST request on the context path. The following items should be used as path parameters:</p><ol><li><p>An encrypted secure token as a key. Steps on how a secure token is generated is documented <u><a href=\"#tag/Authentication\">here</a></u>.</p></li><li><p>The module for which the delete operation is being performed. In this case, the module to be used is “fs”</u>.</p></li><li><p>The subModule for which the delete operation is being performed. A list of all subModules can be retrieved from the “submodule” endpoint mentioned <u><a href=\"#tag/Retrieve-Franchise-Number\">here</a></u>.</p></li><li><p>Response type as XML or JSON, depending on the type of response that is desired.</u>.</p></li><li><p class=\"western\">filterXML that would contain the parameters/ details of the request that is to be used to delete the Sales Compliance data. In order to determine the parameter names/ schema, a query operation is to be performed with the corresponding module and submodule names and operation as “delete”. Details on how the query operation is to be performed is mentioned <u><a href=\"#tag/Retrieve-Franchise-Number\">here</a></u>.</li></ol></p>",
        "responses": {
          "default": {
            "description": "successful operation"
          }
        },
        "requestBody": {
          "$ref": "#/components/requestBodies/FSCreateLeadArray"
        }
      }
    },
    "/dataservices/create Contact": {
      "post": {
        "tags": [
          "Contact"
        ],
        "summary": "Create",
        "description": "<p class=\"western\">The create endpoint is used to add Sales Compliance data in the system. </p><p class=\"western\"><strong>Production API Endpoint : </strong><span style=\"color: #0563c1;\"><u><a href=\"https://skyapi.franconnect.net/manage-finance/sales/franchiseeNo/%7Bid%7D/reportPeriod\"><context-path>/rest/dataservices/create</a></u></span></p><p class=\"western\"><strong>UAT API Endpoint &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; : </strong><span style=\"color: #0563c1;\"><u><a href=\"https://skyapi.franconnectuat.net/manage-finance/sales/franchiseeNo/%7Bid%7D/reportPeriod\"><context-path>/rest/dataservices/create</a></u></span></p><p class=\"western\"><strong>Operation Name &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; : </strong>POST</p><p class=\"western\">&nbsp;</p><p class=\"western\">In order to add Sales Compliance data using the REST API, the user should make a POST request on the context path. The following items should be used as path parameters:</p><ol><li><p>An encrypted secure token as a key. Steps on how a secure token is generated is documented <u><a href=\"#tag/Authentication\">here</a></u>.</p></li><li><p>The module for which the \"create\" operation is being performed. In this case, the module to be used is “fs”</u>.</p></li><li><p>The subModule for which the \"create\" operation is being performed. A list of all subModules can be retrieved from the “submodule” endpoint mentioned <u><a href=\"#tag/Retrieve-Franchise-Number\">here</a></u>.</p></li><li><p>Response type as XML or JSON, depending on the type of response that is desired</u>.</p></li><li><p class=\"western\">XMLString that would contain the parameters/ details of the request that is to be used to add Sales Compliance data. In order to determine the parameter names/ schema, a query operation is to be performed with the corresponding module and submodule names and operation as “create”. Details on how the query operation is to be performed is mentioned <u><a href=\"#tag/Retrieve-Franchise-Number\">here.</a></u></li></ol></p>",
        "responses": {
          "default": {
            "description": "successful operation"
          }
        },
        "requestBody": {
          "$ref": "#/components/requestBodies/FSCreateLeadArray"
        }
      }
    },
    "/dataservices/retrieve Contact": {
      "post": {
        "tags": [
          "Contact"
        ],
        "summary": "Retrieve",
        "description": "<p class=\"western\">The retrieve endpoint is used to retrieve the Sales Compliance data. </p><p class=\"western\"><strong>Production API Endpoint : </strong><span style=\"color: #0563c1;\"><u><a href=\"https://skyapi.franconnect.net/manage-finance/sales/franchiseeNo/%7Bid%7D/reportPeriod\"><context-path>/rest/dataservices/retrieve</a></u></span></p><p class=\"western\"><strong>UAT API Endpoint &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; : </strong><span style=\"color: #0563c1;\"><u><a href=\"https://skyapi.franconnectuat.net/manage-finance/sales/franchiseeNo/%7Bid%7D/reportPeriod\"><context-path>/rest/dataservices/retrieve</a></u></span></p><p class=\"western\"><strong>Operation Name &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; : </strong>POST</p><p class=\"western\">&nbsp;</p><p class=\"western\">In order to retrieve Sales Compliance data using the REST API, the user should make a POST request on the context path. The following items should be used as path parameters:</p><ol><li><p>An encrypted secure token as a key. Steps on how a secure token is generated is documented <u><a href=\"#tag/Authentication\">here</a></u>.</p></li><li><p>The module for which the retrieve operation is being performed. In this case, the module to be used is “fs”</u>.</p></li><li><p>The subModule for which the retrieve operation is being performed. A list of all subModules can be retrieved from the “submodule” endpoint mentioned <u><a href=\"#tag/Retrieve-Franchise-Number\">here</a></u>.</p></li><li><p>Response type as XML or JSON, depending on the type of response that is desired</u>.</p></li><li><p class=\"western\">filterXML that would contain the parameters/ details of the request that is to be used to retrieve the Sales Compliance data. In order to determine the parameter names/ schema, a query operation is to be performed with the corresponding module and submodule names and operation as “retrieve”. Details on how the query operation is to be performed is mentioned <u><a href=\"#tag/Retrieve-Franchise-Number\">here</a></u>.</li>.</ol></p>",
        "responses": {
          "default": {
            "description": "successful operation"
          }
        },
        "requestBody": {
          "$ref": "#/components/requestBodies/FSCreateLeadArray"
        }
      }
    },
    "/dataservices/update Contact": {
      "post": {
        "tags": [
          "Contact"
        ],
        "summary": "Update",
        "description": "<p class=\"western\">The update endpoint is used to update the Sales Compliance data. </p><p class=\"western\"><strong>Production API Endpoint : </strong><span style=\"color: #0563c1;\"><u><a href=\"https://skyapi.franconnect.net/manage-finance/sales/franchiseeNo/%7Bid%7D/reportPeriod\"><context-path>/rest/dataservices/update</a></u></span></p><p class=\"western\"><strong>UAT API Endpoint &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; : </strong><span style=\"color: #0563c1;\"><u><a href=\"https://skyapi.franconnectuat.net/manage-finance/sales/franchiseeNo/%7Bid%7D/reportPeriod\"><context-path>/rest/dataservices/update</a></u></span></p><p class=\"western\"><strong>Operation Name &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; : </strong>POST</p><p class=\"western\">&nbsp;</p><p class=\"western\">In order to update the Sales Compliance data using the REST API, the user should make a POST request on the context path. The following items should be used as path parameters:</p><ol><li><p>An encrypted secure token as a key. Steps on how a secure token is generated is documented <u><a href=\"#tag/Authentication\">here</a></u>.</p></li><li><p>The module for which the update operation is being performed. In this case, the module to be used is “fs”</u>.</p></li><li><p>The subModule for which the update operation is being performed. A list of all subModules can be retrieved from the “submodule” endpoint mentioned <u><a href=\"#tag/Retrieve-Franchise-Number\">here</a></u>.</p></li><li><p>Response type as XML or JSON, depending on the type of response that is desired</u>.</p></li><li><p class=\"western\">XMLString that would contain the parameters/ details of the request that is to be used to update the Sales Compliance data. In order to determine the parameter names/ schema, a query operation is to be performed with the corresponding module and submodule names and operation as “update”. Details on how the query operation is to be performed is mentioned <u><a href=\"#tag/Retrieve-Franchise-Number\">here</a></u>.</li></ol></p>",
        "responses": {
          "default": {
            "description": "successful operation"
          }
        },
        "requestBody": {
          "$ref": "#/components/requestBodies/FSCreateLeadArray"
        }
      }
    },
    "/dataservices/Delete Contact": {
      "post": {
        "tags": [
          "Contact"
        ],
        "summary": "Delete",
        "description": "<p class=\"western\">The delete endpoint is used to delete Sales Compliance data from the system. </p><p class=\"western\"><strong>Production API Endpoint : </strong><span style=\"color: #0563c1;\"><u><a href=\"https://skyapi.franconnect.net/manage-finance/sales/franchiseeNo/%7Bid%7D/reportPeriod\"><context-path>/rest/dataservices/delete</a></u></span></p><p class=\"western\"><strong>UAT API Endpoint &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; : </strong><span style=\"color: #0563c1;\"><u><a href=\"https://skyapi.franconnectuat.net/manage-finance/sales/franchiseeNo/%7Bid%7D/reportPeriod\"><context-path>/rest/dataservices/delete</a></u></span></p><p class=\"western\"><strong>Operation Name &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; : </strong>POST</p><p class=\"western\">&nbsp;</p><p class=\"western\">In order to delete Sales Compliance data using the REST API, the user should make a POST request on the context path. The following items should be used as path parameters:</p><ol><li><p>An encrypted secure token as a key. Steps on how a secure token is generated is documented <u><a href=\"#tag/Authentication\">here</a></u>.</p></li><li><p>The module for which the delete operation is being performed. In this case, the module to be used is “fs”</u>.</p></li><li><p>The subModule for which the delete operation is being performed. A list of all subModules can be retrieved from the “submodule” endpoint mentioned <u><a href=\"#tag/Retrieve-Franchise-Number\">here</a></u>.</p></li><li><p>Response type as XML or JSON, depending on the type of response that is desired.</u>.</p></li><li><p class=\"western\">filterXML that would contain the parameters/ details of the request that is to be used to delete the Sales Compliance data. In order to determine the parameter names/ schema, a query operation is to be performed with the corresponding module and submodule names and operation as “delete”. Details on how the query operation is to be performed is mentioned <u><a href=\"#tag/Retrieve-Franchise-Number\">here</a></u>.</li></ol></p>",
        "responses": {
          "default": {
            "description": "successful operation"
          }
        },
        "requestBody": {
          "$ref": "#/components/requestBodies/FSCreateLeadArray"
        }
      }
    },
    "/dataservices/create Account": {
      "post": {
        "tags": [
          "Account"
        ],
        "summary": "Create",
        "description": "<p class=\"western\">The create endpoint is used to add Sales Compliance data in the system. </p><p class=\"western\"><strong>Production API Endpoint : </strong><span style=\"color: #0563c1;\"><u><a href=\"https://skyapi.franconnect.net/manage-finance/sales/franchiseeNo/%7Bid%7D/reportPeriod\"><context-path>/rest/dataservices/create</a></u></span></p><p class=\"western\"><strong>UAT API Endpoint &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; : </strong><span style=\"color: #0563c1;\"><u><a href=\"https://skyapi.franconnectuat.net/manage-finance/sales/franchiseeNo/%7Bid%7D/reportPeriod\"><context-path>/rest/dataservices/create</a></u></span></p><p class=\"western\"><strong>Operation Name &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; : </strong>POST</p><p class=\"western\">&nbsp;</p><p class=\"western\">In order to add Sales Compliance data using the REST API, the user should make a POST request on the context path. The following items should be used as path parameters:</p><ol><li><p>An encrypted secure token as a key. Steps on how a secure token is generated is documented <u><a href=\"#tag/Authentication\">here</a></u>.</p></li><li><p>The module for which the \"create\" operation is being performed. In this case, the module to be used is “fs”</u>.</p></li><li><p>The subModule for which the \"create\" operation is being performed. A list of all subModules can be retrieved from the “submodule” endpoint mentioned <u><a href=\"#tag/Retrieve-Franchise-Number\">here</a></u>.</p></li><li><p>Response type as XML or JSON, depending on the type of response that is desired</u>.</p></li><li><p class=\"western\">XMLString that would contain the parameters/ details of the request that is to be used to add Sales Compliance data. In order to determine the parameter names/ schema, a query operation is to be performed with the corresponding module and submodule names and operation as “create”. Details on how the query operation is to be performed is mentioned <u><a href=\"#tag/Retrieve-Franchise-Number\">here.</a></u></li></ol></p>",
        "responses": {
          "default": {
            "description": "successful operation"
          }
        },
        "requestBody": {
          "$ref": "#/components/requestBodies/FSCreateLeadArray"
        }
      }
    },
    "/dataservices/retrieve Account": {
      "post": {
        "tags": [
          "Account"
        ],
        "summary": "Retrieve",
        "description": "<p class=\"western\">The retrieve endpoint is used to retrieve the Sales Compliance data. </p><p class=\"western\"><strong>Production API Endpoint : </strong><span style=\"color: #0563c1;\"><u><a href=\"https://skyapi.franconnect.net/manage-finance/sales/franchiseeNo/%7Bid%7D/reportPeriod\"><context-path>/rest/dataservices/retrieve</a></u></span></p><p class=\"western\"><strong>UAT API Endpoint &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; : </strong><span style=\"color: #0563c1;\"><u><a href=\"https://skyapi.franconnectuat.net/manage-finance/sales/franchiseeNo/%7Bid%7D/reportPeriod\"><context-path>/rest/dataservices/retrieve</a></u></span></p><p class=\"western\"><strong>Operation Name &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; : </strong>POST</p><p class=\"western\">&nbsp;</p><p class=\"western\">In order to retrieve Sales Compliance data using the REST API, the user should make a POST request on the context path. The following items should be used as path parameters:</p><ol><li><p>An encrypted secure token as a key. Steps on how a secure token is generated is documented <u><a href=\"#tag/Authentication\">here</a></u>.</p></li><li><p>The module for which the retrieve operation is being performed. In this case, the module to be used is “fs”</u>.</p></li><li><p>The subModule for which the retrieve operation is being performed. A list of all subModules can be retrieved from the “submodule” endpoint mentioned <u><a href=\"#tag/Retrieve-Franchise-Number\">here</a></u>.</p></li><li><p>Response type as XML or JSON, depending on the type of response that is desired</u>.</p></li><li><p class=\"western\">filterXML that would contain the parameters/ details of the request that is to be used to retrieve the Sales Compliance data. In order to determine the parameter names/ schema, a query operation is to be performed with the corresponding module and submodule names and operation as “retrieve”. Details on how the query operation is to be performed is mentioned <u><a href=\"#tag/Retrieve-Franchise-Number\">here</a></u>.</li>.</ol></p>",
        "responses": {
          "default": {
            "description": "successful operation"
          }
        },
        "requestBody": {
          "$ref": "#/components/requestBodies/FSCreateLeadArray"
        }
      }
    },
    "/dataservices/update Account": {
      "post": {
        "tags": [
          "Account"
        ],
        "summary": "Update",
        "description": "<p class=\"western\">The update endpoint is used to update the Sales Compliance data. </p><p class=\"western\"><strong>Production API Endpoint : </strong><span style=\"color: #0563c1;\"><u><a href=\"https://skyapi.franconnect.net/manage-finance/sales/franchiseeNo/%7Bid%7D/reportPeriod\"><context-path>/rest/dataservices/update</a></u></span></p><p class=\"western\"><strong>UAT API Endpoint &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; : </strong><span style=\"color: #0563c1;\"><u><a href=\"https://skyapi.franconnectuat.net/manage-finance/sales/franchiseeNo/%7Bid%7D/reportPeriod\"><context-path>/rest/dataservices/update</a></u></span></p><p class=\"western\"><strong>Operation Name &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; : </strong>POST</p><p class=\"western\">&nbsp;</p><p class=\"western\">In order to update the Sales Compliance data using the REST API, the user should make a POST request on the context path. The following items should be used as path parameters:</p><ol><li><p>An encrypted secure token as a key. Steps on how a secure token is generated is documented <u><a href=\"#tag/Authentication\">here</a></u>.</p></li><li><p>The module for which the update operation is being performed. In this case, the module to be used is “fs”</u>.</p></li><li><p>The subModule for which the update operation is being performed. A list of all subModules can be retrieved from the “submodule” endpoint mentioned <u><a href=\"#tag/Retrieve-Franchise-Number\">here</a></u>.</p></li><li><p>Response type as XML or JSON, depending on the type of response that is desired</u>.</p></li><li><p class=\"western\">XMLString that would contain the parameters/ details of the request that is to be used to update the Sales Compliance data. In order to determine the parameter names/ schema, a query operation is to be performed with the corresponding module and submodule names and operation as “update”. Details on how the query operation is to be performed is mentioned <u><a href=\"#tag/Retrieve-Franchise-Number\">here</a></u>.</li></ol></p>",
        "responses": {
          "default": {
            "description": "successful operation"
          }
        },
        "requestBody": {
          "$ref": "#/components/requestBodies/FSCreateLeadArray"
        }
      }
    },
    "/dataservices/Delete Account": {
      "post": {
        "tags": [
          "Account"
        ],
        "summary": "Delete",
        "description": "<p class=\"western\">The delete endpoint is used to delete Sales Compliance data from the system. </p><p class=\"western\"><strong>Production API Endpoint : </strong><span style=\"color: #0563c1;\"><u><a href=\"https://skyapi.franconnect.net/manage-finance/sales/franchiseeNo/%7Bid%7D/reportPeriod\"><context-path>/rest/dataservices/delete</a></u></span></p><p class=\"western\"><strong>UAT API Endpoint &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; : </strong><span style=\"color: #0563c1;\"><u><a href=\"https://skyapi.franconnectuat.net/manage-finance/sales/franchiseeNo/%7Bid%7D/reportPeriod\"><context-path>/rest/dataservices/delete</a></u></span></p><p class=\"western\"><strong>Operation Name &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; : </strong>POST</p><p class=\"western\">&nbsp;</p><p class=\"western\">In order to delete Sales Compliance data using the REST API, the user should make a POST request on the context path. The following items should be used as path parameters:</p><ol><li><p>An encrypted secure token as a key. Steps on how a secure token is generated is documented <u><a href=\"#tag/Authentication\">here</a></u>.</p></li><li><p>The module for which the delete operation is being performed. In this case, the module to be used is “fs”</u>.</p></li><li><p>The subModule for which the delete operation is being performed. A list of all subModules can be retrieved from the “submodule” endpoint mentioned <u><a href=\"#tag/Retrieve-Franchise-Number\">here</a></u>.</p></li><li><p>Response type as XML or JSON, depending on the type of response that is desired.</u>.</p></li><li><p class=\"western\">filterXML that would contain the parameters/ details of the request that is to be used to delete the Sales Compliance data. In order to determine the parameter names/ schema, a query operation is to be performed with the corresponding module and submodule names and operation as “delete”. Details on how the query operation is to be performed is mentioned <u><a href=\"#tag/Retrieve-Franchise-Number\">here</a></u>.</li></ol></p>",
        "responses": {
          "default": {
            "description": "successful operation"
          }
        },
        "requestBody": {
          "$ref": "#/components/requestBodies/FSCreateLeadArray"
        }
      }
    },
    "/dataservices/create Transactions": {
      "post": {
        "tags": [
          "Transactions"
        ],
        "summary": "Create",
        "description": "<p class=\"western\">The create endpoint is used to add Sales Compliance data in the system. </p><p class=\"western\"><strong>Production API Endpoint : </strong><span style=\"color: #0563c1;\"><u><a href=\"https://skyapi.franconnect.net/manage-finance/sales/franchiseeNo/%7Bid%7D/reportPeriod\"><context-path>/rest/dataservices/create</a></u></span></p><p class=\"western\"><strong>UAT API Endpoint &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; : </strong><span style=\"color: #0563c1;\"><u><a href=\"https://skyapi.franconnectuat.net/manage-finance/sales/franchiseeNo/%7Bid%7D/reportPeriod\"><context-path>/rest/dataservices/create</a></u></span></p><p class=\"western\"><strong>Operation Name &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; : </strong>POST</p><p class=\"western\">&nbsp;</p><p class=\"western\">In order to add Sales Compliance data using the REST API, the user should make a POST request on the context path. The following items should be used as path parameters:</p><ol><li><p>An encrypted secure token as a key. Steps on how a secure token is generated is documented <u><a href=\"#tag/Authentication\">here</a></u>.</p></li><li><p>The module for which the \"create\" operation is being performed. In this case, the module to be used is “fs”</u>.</p></li><li><p>The subModule for which the \"create\" operation is being performed. A list of all subModules can be retrieved from the “submodule” endpoint mentioned <u><a href=\"#tag/Retrieve-Franchise-Number\">here</a></u>.</p></li><li><p>Response type as XML or JSON, depending on the type of response that is desired</u>.</p></li><li><p class=\"western\">XMLString that would contain the parameters/ details of the request that is to be used to add Sales Compliance data. In order to determine the parameter names/ schema, a query operation is to be performed with the corresponding module and submodule names and operation as “create”. Details on how the query operation is to be performed is mentioned <u><a href=\"#tag/Retrieve-Franchise-Number\">here.</a></u></li></ol></p>",
        "responses": {
          "default": {
            "description": "successful operation"
          }
        },
        "requestBody": {
          "$ref": "#/components/requestBodies/FSCreateLeadArray"
        }
      }
    },
    "/dataservices/retrieve Transactions": {
      "post": {
        "tags": [
          "Transactions"
        ],
        "summary": "Retrieve",
        "description": "<p class=\"western\">The retrieve endpoint is used to retrieve the Sales Compliance data. </p><p class=\"western\"><strong>Production API Endpoint : </strong><span style=\"color: #0563c1;\"><u><a href=\"https://skyapi.franconnect.net/manage-finance/sales/franchiseeNo/%7Bid%7D/reportPeriod\"><context-path>/rest/dataservices/retrieve</a></u></span></p><p class=\"western\"><strong>UAT API Endpoint &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; : </strong><span style=\"color: #0563c1;\"><u><a href=\"https://skyapi.franconnectuat.net/manage-finance/sales/franchiseeNo/%7Bid%7D/reportPeriod\"><context-path>/rest/dataservices/retrieve</a></u></span></p><p class=\"western\"><strong>Operation Name &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; : </strong>POST</p><p class=\"western\">&nbsp;</p><p class=\"western\">In order to retrieve Sales Compliance data using the REST API, the user should make a POST request on the context path. The following items should be used as path parameters:</p><ol><li><p>An encrypted secure token as a key. Steps on how a secure token is generated is documented <u><a href=\"#tag/Authentication\">here</a></u>.</p></li><li><p>The module for which the retrieve operation is being performed. In this case, the module to be used is “fs”</u>.</p></li><li><p>The subModule for which the retrieve operation is being performed. A list of all subModules can be retrieved from the “submodule” endpoint mentioned <u><a href=\"#tag/Retrieve-Franchise-Number\">here</a></u>.</p></li><li><p>Response type as XML or JSON, depending on the type of response that is desired</u>.</p></li><li><p class=\"western\">filterXML that would contain the parameters/ details of the request that is to be used to retrieve the Sales Compliance data. In order to determine the parameter names/ schema, a query operation is to be performed with the corresponding module and submodule names and operation as “retrieve”. Details on how the query operation is to be performed is mentioned <u><a href=\"#tag/Retrieve-Franchise-Number\">here</a></u>.</li>.</ol></p>",
        "responses": {
          "default": {
            "description": "successful operation"
          }
        },
        "requestBody": {
          "$ref": "#/components/requestBodies/FSCreateLeadArray"
        }
      }
    },
    "/dataservices/update Transactions": {
      "post": {
        "tags": [
          "Transactions"
        ],
        "summary": "Update",
        "description": "<p class=\"western\">The update endpoint is used to update the Sales Compliance data. </p><p class=\"western\"><strong>Production API Endpoint : </strong><span style=\"color: #0563c1;\"><u><a href=\"https://skyapi.franconnect.net/manage-finance/sales/franchiseeNo/%7Bid%7D/reportPeriod\"><context-path>/rest/dataservices/update</a></u></span></p><p class=\"western\"><strong>UAT API Endpoint &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; : </strong><span style=\"color: #0563c1;\"><u><a href=\"https://skyapi.franconnectuat.net/manage-finance/sales/franchiseeNo/%7Bid%7D/reportPeriod\"><context-path>/rest/dataservices/update</a></u></span></p><p class=\"western\"><strong>Operation Name &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; : </strong>POST</p><p class=\"western\">&nbsp;</p><p class=\"western\">In order to update the Sales Compliance data using the REST API, the user should make a POST request on the context path. The following items should be used as path parameters:</p><ol><li><p>An encrypted secure token as a key. Steps on how a secure token is generated is documented <u><a href=\"#tag/Authentication\">here</a></u>.</p></li><li><p>The module for which the update operation is being performed. In this case, the module to be used is “fs”</u>.</p></li><li><p>The subModule for which the update operation is being performed. A list of all subModules can be retrieved from the “submodule” endpoint mentioned <u><a href=\"#tag/Retrieve-Franchise-Number\">here</a></u>.</p></li><li><p>Response type as XML or JSON, depending on the type of response that is desired</u>.</p></li><li><p class=\"western\">XMLString that would contain the parameters/ details of the request that is to be used to update the Sales Compliance data. In order to determine the parameter names/ schema, a query operation is to be performed with the corresponding module and submodule names and operation as “update”. Details on how the query operation is to be performed is mentioned <u><a href=\"#tag/Retrieve-Franchise-Number\">here</a></u>.</li></ol></p>",
        "responses": {
          "default": {
            "description": "successful operation"
          }
        },
        "requestBody": {
          "$ref": "#/components/requestBodies/FSCreateLeadArray"
        }
      }
    },
    "/dataservices/Delete Transactions": {
      "post": {
        "tags": [
          "Transactions"
        ],
        "summary": "Delete",
        "description": "<p class=\"western\">The delete endpoint is used to delete Sales Compliance data from the system. </p><p class=\"western\"><strong>Production API Endpoint : </strong><span style=\"color: #0563c1;\"><u><a href=\"https://skyapi.franconnect.net/manage-finance/sales/franchiseeNo/%7Bid%7D/reportPeriod\"><context-path>/rest/dataservices/delete</a></u></span></p><p class=\"western\"><strong>UAT API Endpoint &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; : </strong><span style=\"color: #0563c1;\"><u><a href=\"https://skyapi.franconnectuat.net/manage-finance/sales/franchiseeNo/%7Bid%7D/reportPeriod\"><context-path>/rest/dataservices/delete</a></u></span></p><p class=\"western\"><strong>Operation Name &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; : </strong>POST</p><p class=\"western\">&nbsp;</p><p class=\"western\">In order to delete Sales Compliance data using the REST API, the user should make a POST request on the context path. The following items should be used as path parameters:</p><ol><li><p>An encrypted secure token as a key. Steps on how a secure token is generated is documented <u><a href=\"#tag/Authentication\">here</a></u>.</p></li><li><p>The module for which the delete operation is being performed. In this case, the module to be used is “fs”</u>.</p></li><li><p>The subModule for which the delete operation is being performed. A list of all subModules can be retrieved from the “submodule” endpoint mentioned <u><a href=\"#tag/Retrieve-Franchise-Number\">here</a></u>.</p></li><li><p>Response type as XML or JSON, depending on the type of response that is desired.</u>.</p></li><li><p class=\"western\">filterXML that would contain the parameters/ details of the request that is to be used to delete the Sales Compliance data. In order to determine the parameter names/ schema, a query operation is to be performed with the corresponding module and submodule names and operation as “delete”. Details on how the query operation is to be performed is mentioned <u><a href=\"#tag/Retrieve-Franchise-Number\">here</a></u>.</li></ol></p>",
        "responses": {
          "default": {
            "description": "successful operation"
          }
        },
        "requestBody": {
          "$ref": "#/components/requestBodies/FSCreateLeadArray"
        }
      }
    },
    "/dataservices/create Task": {
      "post": {
        "tags": [
          "Retrieve Task"
        ],
        "summary": "Create",
        "description": "<p class=\"western\">The retrieve endpoint is used to retrieve the Sales Compliance data. </p><p class=\"western\"><strong>Production API Endpoint : </strong><span style=\"color: #0563c1;\"><u><a href=\"https://skyapi.franconnect.net/manage-finance/sales/franchiseeNo/%7Bid%7D/reportPeriod\"><context-path>/rest/dataservices/retrieve</a></u></span></p><p class=\"western\"><strong>UAT API Endpoint &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; : </strong><span style=\"color: #0563c1;\"><u><a href=\"https://skyapi.franconnectuat.net/manage-finance/sales/franchiseeNo/%7Bid%7D/reportPeriod\"><context-path>/rest/dataservices/retrieve</a></u></span></p><p class=\"western\"><strong>Operation Name &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; : </strong>POST</p><p class=\"western\">&nbsp;</p><p class=\"western\">In order to retrieve Sales Compliance data using the REST API, the user should make a POST request on the context path. The following items should be used as path parameters:</p><ol><li><p>An encrypted secure token as a key. Steps on how a secure token is generated is documented <u><a href=\"#tag/Authentication\">here</a></u>.</p></li><li><p>The module for which the retrieve operation is being performed. In this case, the module to be used is “fs”</u>.</p></li><li><p>The subModule for which the retrieve operation is being performed. A list of all subModules can be retrieved from the “submodule” endpoint mentioned <u><a href=\"#tag/Retrieve-Franchise-Number\">here</a></u>.</p></li><li><p>Response type as XML or JSON, depending on the type of response that is desired</u>.</p></li><li><p class=\"western\">filterXML that would contain the parameters/ details of the request that is to be used to retrieve the Sales Compliance data. In order to determine the parameter names/ schema, a query operation is to be performed with the corresponding module and submodule names and operation as “retrieve”. Details on how the query operation is to be performed is mentioned <u><a href=\"#tag/Retrieve-Franchise-Number\">here</a></u>.</li>.</ol></p>",
        "responses": {
          "default": {
            "description": "successful operation"
          }
        },
        "requestBody": {
          "$ref": "#/components/requestBodies/FSCreateLeadArray"
        }
      }
    },
    "/dataservices/retrieve Task": {
      "post": {
        "tags": [
          "Retrieve Task"
        ],
        "summary": "Retrieve",
        "description": "<p class=\"western\">The retrieve endpoint is used to retrieve the Sales Compliance data. </p><p class=\"western\"><strong>Production API Endpoint : </strong><span style=\"color: #0563c1;\"><u><a href=\"https://skyapi.franconnect.net/manage-finance/sales/franchiseeNo/%7Bid%7D/reportPeriod\"><context-path>/rest/dataservices/retrieve</a></u></span></p><p class=\"western\"><strong>UAT API Endpoint &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; : </strong><span style=\"color: #0563c1;\"><u><a href=\"https://skyapi.franconnectuat.net/manage-finance/sales/franchiseeNo/%7Bid%7D/reportPeriod\"><context-path>/rest/dataservices/retrieve</a></u></span></p><p class=\"western\"><strong>Operation Name &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; : </strong>POST</p><p class=\"western\">&nbsp;</p><p class=\"western\">In order to retrieve Sales Compliance data using the REST API, the user should make a POST request on the context path. The following items should be used as path parameters:</p><ol><li><p>An encrypted secure token as a key. Steps on how a secure token is generated is documented <u><a href=\"#tag/Authentication\">here</a></u>.</p></li><li><p>The module for which the retrieve operation is being performed. In this case, the module to be used is “fs”</u>.</p></li><li><p>The subModule for which the retrieve operation is being performed. A list of all subModules can be retrieved from the “submodule” endpoint mentioned <u><a href=\"#tag/Retrieve-Franchise-Number\">here</a></u>.</p></li><li><p>Response type as XML or JSON, depending on the type of response that is desired</u>.</p></li><li><p class=\"western\">filterXML that would contain the parameters/ details of the request that is to be used to retrieve the Sales Compliance data. In order to determine the parameter names/ schema, a query operation is to be performed with the corresponding module and submodule names and operation as “retrieve”. Details on how the query operation is to be performed is mentioned <u><a href=\"#tag/Retrieve-Franchise-Number\">here</a></u>.</li>.</ol></p>",
        "responses": {
          "default": {
            "description": "successful operation"
          }
        },
        "requestBody": {
          "$ref": "#/components/requestBodies/FSCreateLeadArray"
        }
      }
    },
    "/dataservices/update Task": {
      "post": {
        "tags": [
          "Retrieve Task"
        ],
        "summary": "Update",
        "description": "<p class=\"western\">The retrieve endpoint is used to retrieve the Sales Compliance data. </p><p class=\"western\"><strong>Production API Endpoint : </strong><span style=\"color: #0563c1;\"><u><a href=\"https://skyapi.franconnect.net/manage-finance/sales/franchiseeNo/%7Bid%7D/reportPeriod\"><context-path>/rest/dataservices/retrieve</a></u></span></p><p class=\"western\"><strong>UAT API Endpoint &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; : </strong><span style=\"color: #0563c1;\"><u><a href=\"https://skyapi.franconnectuat.net/manage-finance/sales/franchiseeNo/%7Bid%7D/reportPeriod\"><context-path>/rest/dataservices/retrieve</a></u></span></p><p class=\"western\"><strong>Operation Name &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; : </strong>POST</p><p class=\"western\">&nbsp;</p><p class=\"western\">In order to retrieve Sales Compliance data using the REST API, the user should make a POST request on the context path. The following items should be used as path parameters:</p><ol><li><p>An encrypted secure token as a key. Steps on how a secure token is generated is documented <u><a href=\"#tag/Authentication\">here</a></u>.</p></li><li><p>The module for which the retrieve operation is being performed. In this case, the module to be used is “fs”</u>.</p></li><li><p>The subModule for which the retrieve operation is being performed. A list of all subModules can be retrieved from the “submodule” endpoint mentioned <u><a href=\"#tag/Retrieve-Franchise-Number\">here</a></u>.</p></li><li><p>Response type as XML or JSON, depending on the type of response that is desired</u>.</p></li><li><p class=\"western\">filterXML that would contain the parameters/ details of the request that is to be used to retrieve the Sales Compliance data. In order to determine the parameter names/ schema, a query operation is to be performed with the corresponding module and submodule names and operation as “retrieve”. Details on how the query operation is to be performed is mentioned <u><a href=\"#tag/Retrieve-Franchise-Number\">here</a></u>.</li>.</ol></p>",
        "responses": {
          "default": {
            "description": "successful operation"
          }
        },
        "requestBody": {
          "$ref": "#/components/requestBodies/FSCreateLeadArray"
        }
      }
    },
    "/dataservices/delete Task": {
      "post": {
        "tags": [
          "Retrieve Task"
        ],
        "summary": "Delete",
        "description": "<p class=\"western\">The retrieve endpoint is used to retrieve the Sales Compliance data. </p><p class=\"western\"><strong>Production API Endpoint : </strong><span style=\"color: #0563c1;\"><u><a href=\"https://skyapi.franconnect.net/manage-finance/sales/franchiseeNo/%7Bid%7D/reportPeriod\"><context-path>/rest/dataservices/retrieve</a></u></span></p><p class=\"western\"><strong>UAT API Endpoint &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; : </strong><span style=\"color: #0563c1;\"><u><a href=\"https://skyapi.franconnectuat.net/manage-finance/sales/franchiseeNo/%7Bid%7D/reportPeriod\"><context-path>/rest/dataservices/retrieve</a></u></span></p><p class=\"western\"><strong>Operation Name &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; : </strong>POST</p><p class=\"western\">&nbsp;</p><p class=\"western\">In order to retrieve Sales Compliance data using the REST API, the user should make a POST request on the context path. The following items should be used as path parameters:</p><ol><li><p>An encrypted secure token as a key. Steps on how a secure token is generated is documented <u><a href=\"#tag/Authentication\">here</a></u>.</p></li><li><p>The module for which the retrieve operation is being performed. In this case, the module to be used is “fs”</u>.</p></li><li><p>The subModule for which the retrieve operation is being performed. A list of all subModules can be retrieved from the “submodule” endpoint mentioned <u><a href=\"#tag/Retrieve-Franchise-Number\">here</a></u>.</p></li><li><p>Response type as XML or JSON, depending on the type of response that is desired</u>.</p></li><li><p class=\"western\">filterXML that would contain the parameters/ details of the request that is to be used to retrieve the Sales Compliance data. In order to determine the parameter names/ schema, a query operation is to be performed with the corresponding module and submodule names and operation as “retrieve”. Details on how the query operation is to be performed is mentioned <u><a href=\"#tag/Retrieve-Franchise-Number\">here</a></u>.</li>.</ol></p>",
        "responses": {
          "default": {
            "description": "successful operation"
          }
        },
        "requestBody": {
          "$ref": "#/components/requestBodies/FSCreateLeadArray"
        }
      }
    },
    "/dataservices/retrieve Emails": {
      "post": {
        "tags": [
          "Retrieve Emails"
        ],
        "summary": "Retrieve",
        "description": "<p class=\"western\">The retrieve endpoint is used to retrieve the Sales Compliance data. </p><p class=\"western\"><strong>Production API Endpoint : </strong><span style=\"color: #0563c1;\"><u><a href=\"https://skyapi.franconnect.net/manage-finance/sales/franchiseeNo/%7Bid%7D/reportPeriod\"><context-path>/rest/dataservices/retrieve</a></u></span></p><p class=\"western\"><strong>UAT API Endpoint &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; : </strong><span style=\"color: #0563c1;\"><u><a href=\"https://skyapi.franconnectuat.net/manage-finance/sales/franchiseeNo/%7Bid%7D/reportPeriod\"><context-path>/rest/dataservices/retrieve</a></u></span></p><p class=\"western\"><strong>Operation Name &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; : </strong>POST</p><p class=\"western\">&nbsp;</p><p class=\"western\">In order to retrieve Sales Compliance data using the REST API, the user should make a POST request on the context path. The following items should be used as path parameters:</p><ol><li><p>An encrypted secure token as a key. Steps on how a secure token is generated is documented <u><a href=\"#tag/Authentication\">here</a></u>.</p></li><li><p>The module for which the retrieve operation is being performed. In this case, the module to be used is “fs”</u>.</p></li><li><p>The subModule for which the retrieve operation is being performed. A list of all subModules can be retrieved from the “submodule” endpoint mentioned <u><a href=\"#tag/Retrieve-Franchise-Number\">here</a></u>.</p></li><li><p>Response type as XML or JSON, depending on the type of response that is desired</u>.</p></li><li><p class=\"western\">filterXML that would contain the parameters/ details of the request that is to be used to retrieve the Sales Compliance data. In order to determine the parameter names/ schema, a query operation is to be performed with the corresponding module and submodule names and operation as “retrieve”. Details on how the query operation is to be performed is mentioned <u><a href=\"#tag/Retrieve-Franchise-Number\">here</a></u>.</li>.</ol></p>",
        "responses": {
          "default": {
            "description": "successful operation"
          }
        },
        "requestBody": {
          "$ref": "#/components/requestBodies/FSCreateLeadArray"
        }
      }
    },
    "/dataservices/retrieve Email Campaigns": {
      "post": {
        "tags": [
          "Email Campaigns"
        ],
        "summary": "Retrieve",
        "description": "<p class=\"western\">The retrieve endpoint is used to retrieve the Sales Compliance data. </p><p class=\"western\"><strong>Production API Endpoint : </strong><span style=\"color: #0563c1;\"><u><a href=\"https://skyapi.franconnect.net/manage-finance/sales/franchiseeNo/%7Bid%7D/reportPeriod\"><context-path>/rest/dataservices/retrieve</a></u></span></p><p class=\"western\"><strong>UAT API Endpoint &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; : </strong><span style=\"color: #0563c1;\"><u><a href=\"https://skyapi.franconnectuat.net/manage-finance/sales/franchiseeNo/%7Bid%7D/reportPeriod\"><context-path>/rest/dataservices/retrieve</a></u></span></p><p class=\"western\"><strong>Operation Name &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; : </strong>POST</p><p class=\"western\">&nbsp;</p><p class=\"western\">In order to retrieve Sales Compliance data using the REST API, the user should make a POST request on the context path. The following items should be used as path parameters:</p><ol><li><p>An encrypted secure token as a key. Steps on how a secure token is generated is documented <u><a href=\"#tag/Authentication\">here</a></u>.</p></li><li><p>The module for which the retrieve operation is being performed. In this case, the module to be used is “fs”</u>.</p></li><li><p>The subModule for which the retrieve operation is being performed. A list of all subModules can be retrieved from the “submodule” endpoint mentioned <u><a href=\"#tag/Retrieve-Franchise-Number\">here</a></u>.</p></li><li><p>Response type as XML or JSON, depending on the type of response that is desired</u>.</p></li><li><p class=\"western\">filterXML that would contain the parameters/ details of the request that is to be used to retrieve the Sales Compliance data. In order to determine the parameter names/ schema, a query operation is to be performed with the corresponding module and submodule names and operation as “retrieve”. Details on how the query operation is to be performed is mentioned <u><a href=\"#tag/Retrieve-Franchise-Number\">here</a></u>.</li>.</ol></p>",
        "responses": {
          "default": {
            "description": "successful operation"
          }
        },
        "requestBody": {
          "$ref": "#/components/requestBodies/FSCreateLeadArray"
        }
      }
    },
    "/dataservices/retrieve SMS": {
      "post": {
        "tags": [
          "Retrieve SMS"
        ],
        "summary": "Retrieve",
        "description": "<p class=\"western\">The retrieve endpoint is used to retrieve the Sales Compliance data. </p><p class=\"western\"><strong>Production API Endpoint : </strong><span style=\"color: #0563c1;\"><u><a href=\"https://skyapi.franconnect.net/manage-finance/sales/franchiseeNo/%7Bid%7D/reportPeriod\"><context-path>/rest/dataservices/retrieve</a></u></span></p><p class=\"western\"><strong>UAT API Endpoint &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; : </strong><span style=\"color: #0563c1;\"><u><a href=\"https://skyapi.franconnectuat.net/manage-finance/sales/franchiseeNo/%7Bid%7D/reportPeriod\"><context-path>/rest/dataservices/retrieve</a></u></span></p><p class=\"western\"><strong>Operation Name &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; : </strong>POST</p><p class=\"western\">&nbsp;</p><p class=\"western\">In order to retrieve Sales Compliance data using the REST API, the user should make a POST request on the context path. The following items should be used as path parameters:</p><ol><li><p>An encrypted secure token as a key. Steps on how a secure token is generated is documented <u><a href=\"#tag/Authentication\">here</a></u>.</p></li><li><p>The module for which the retrieve operation is being performed. In this case, the module to be used is “fs”</u>.</p></li><li><p>The subModule for which the retrieve operation is being performed. A list of all subModules can be retrieved from the “submodule” endpoint mentioned <u><a href=\"#tag/Retrieve-Franchise-Number\">here</a></u>.</p></li><li><p>Response type as XML or JSON, depending on the type of response that is desired</u>.</p></li><li><p class=\"western\">filterXML that would contain the parameters/ details of the request that is to be used to retrieve the Sales Compliance data. In order to determine the parameter names/ schema, a query operation is to be performed with the corresponding module and submodule names and operation as “retrieve”. Details on how the query operation is to be performed is mentioned <u><a href=\"#tag/Retrieve-Franchise-Number\">here</a></u>.</li>.</ol></p>",
        "responses": {
          "default": {
            "description": "successful operation"
          }
        },
        "requestBody": {
          "$ref": "#/components/requestBodies/FSCreateLeadArray"
        }
      }
    },
    "/dataservices/retrieve SMS Campaigns": {
      "post": {
        "tags": [
          "SMS Campaigns"
        ],
        "summary": "Retrieve",
        "description": "<p class=\"western\">The retrieve endpoint is used to retrieve the Sales Compliance data. </p><p class=\"western\"><strong>Production API Endpoint : </strong><span style=\"color: #0563c1;\"><u><a href=\"https://skyapi.franconnect.net/manage-finance/sales/franchiseeNo/%7Bid%7D/reportPeriod\"><context-path>/rest/dataservices/retrieve</a></u></span></p><p class=\"western\"><strong>UAT API Endpoint &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; : </strong><span style=\"color: #0563c1;\"><u><a href=\"https://skyapi.franconnectuat.net/manage-finance/sales/franchiseeNo/%7Bid%7D/reportPeriod\"><context-path>/rest/dataservices/retrieve</a></u></span></p><p class=\"western\"><strong>Operation Name &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; : </strong>POST</p><p class=\"western\">&nbsp;</p><p class=\"western\">In order to retrieve Sales Compliance data using the REST API, the user should make a POST request on the context path. The following items should be used as path parameters:</p><ol><li><p>An encrypted secure token as a key. Steps on how a secure token is generated is documented <u><a href=\"#tag/Authentication\">here</a></u>.</p></li><li><p>The module for which the retrieve operation is being performed. In this case, the module to be used is “fs”</u>.</p></li><li><p>The subModule for which the retrieve operation is being performed. A list of all subModules can be retrieved from the “submodule” endpoint mentioned <u><a href=\"#tag/Retrieve-Franchise-Number\">here</a></u>.</p></li><li><p>Response type as XML or JSON, depending on the type of response that is desired</u>.</p></li><li><p class=\"western\">filterXML that would contain the parameters/ details of the request that is to be used to retrieve the Sales Compliance data. In order to determine the parameter names/ schema, a query operation is to be performed with the corresponding module and submodule names and operation as “retrieve”. Details on how the query operation is to be performed is mentioned <u><a href=\"#tag/Retrieve-Franchise-Number\">here</a></u>.</li>.</ol></p>",
        "responses": {
          "default": {
            "description": "successful operation"
          }
        },
        "requestBody": {
          "$ref": "#/components/requestBodies/FSCreateLeadArray"
        }
      }
    },
    "/dataservices/retrieve sales reports periods": {
      "get": {
        "tags": [
          "Sales Reports"
        ],
        "summary": "Retrieve Sales Reports Periods",
        "description": "<p class=\"western\">The report period for Sales refers to the minimum period of time for which sales is to be reported by the franchisees. The report period for any franchise location is defined in the financial agreement version that is associated with that franchise location. The term &ldquo;report period&rdquo; refers to the last day (i.e., the end date) of that reporting cycle.</p><p class=\"western\">A &ldquo;GET&rdquo; request is to be made to the API endpoint, along with other required details, to retrieve the report periods for which sales has not been filled for a particular franchisee location.</p><p class=\"western\"><strong>Production API Endpoint : </strong><span style=\"color: #0563c1;\"><u><a href=\"https://finance.franconnect.net/manage-finance/sales/franchiseeNo/%7BfranchiseeNo%7D/reportPeriod\">https://finance.franconnect.net/manage-finance/sales/franchiseeNo/{franchiseeNo}/reportPeriod</a></u></span></p><p class=\"western\"><strong>UAT API Endpoint &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; : </strong><span style=\"color: #0563c1;\"><u><a href=\"https://finance.franconnectuat.net/manage-finance/sales/franchiseeNo/%7BfranchiseeNo%7D/reportPeriod\">https://finance.franconnectuat.net/manage-finance/sales/franchiseeNo/{franchiseeNo}/reportPeriod</a></u></span></p><p class=\"western\"><strong>Operation Name &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; : </strong>GET</p><p class=\"western\">&nbsp;</p><p class=\"western\">Other details that are to be required to make this GET call include:</p><ol><li><p>&ldquo;Authentication&rdquo; as the key and its value as &ldquo;Bearer &lt;access_token&gt;&rdquo; wherein the access_token is the one that is generated as a part of the authentication and the steps for the same can be found <u><a href=\"#tag/Authentication\">here</a></u>.</p></li><li><p>Specify &ldquo;Content-Type&rdquo; as the key and its value as &ldquo;application/json&rdquo;.</p></li><li><p>Mention &ldquo;X-TenantId&rdquo; as the key and its value based on the user&rsquo;s FranConnect system&rsquo;s URL. Details on how to identify the &ldquo;X-TenantId&rdquo; is mentioned <u><a href=\"#tag/Authentication\">here</a></u>.</p></li><li><p>FranchiseNo is the internal unique reference number of the location. Steps to retrieve the franchiseeNo is mentioned <u><a href=\"#tag/Retrieve-Franchise-Number\">here</a></u>.</p></li></ol><p class=\"western\">This would return all the report periods for which sales has not been reported by that location.</p>",
        "responses": {
          "default": {
            "description": "successful operation"
          }
        },
        "requestBody": {
          "$ref": "#/components/requestBodies/FSCreateLeadArray"
        }
      }
    },
    "/dataservices/retrieve finance categories": {
      "get": {
        "tags": [
          "Sales Reports"
        ],
        "summary": "Retrieve Finance Categories",
        "description": "<p class=\"western\">The represents the finance categories used in sales report can be retrieved using the GET operation on the respective API endpoint.</p><p class=\"western\"><strong>Production API Endpoint : </strong><span style=\"color: #0563c1;\"><u><a href=\"https://finance.franconnect.net/manage-finance/sales/categories/finance-categories/franchiseeNo/%7Bfranchisee_number%7D/reportPeriod/%7BreportPeriod%7D\">https://finance.franconnect.net/manage-finance/sales/categories/finance-categories/franchiseeNo/{franchisee_number}/reportPeriod/{reportPeriod}</a></u></span></p><p class=\"western\"><strong>UAT API Endpoint &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; : </strong><span style=\"color: #0563c1;\"><u><a href=\"https://finance.franconnectuat.net/manage-finance/sales/categories/finance-categories/franchiseeNo/%7Bfranchisee_number%7D/reportPeriod/%7BreportPeriod%7D\">https://finance.franconnectuat.net/manage-finance/sales/categories/finance-categories/franchiseeNo/{franchisee_number}/reportPeriod/{reportPeriod}</a></u></span></p><p class=\"western\"><strong>Operation Name &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; : </strong>&nbsp;GET</p><p class=\"western\">&nbsp;</p><p class=\"western\">A previous section already talks about how to retrieve the report periods for which a location is yet to report sales for. This can be accessed&nbsp;<u><a href=\"#operation/Retrieve_Sales_Reports_Periods\">here</a></u>. Once this is done, a particular report period is to be selected and used in the endpoint to perform a GET operation. This would provide a list of financial categories that are available to report the sales against for the given report period.</p>",
        "responses": {
          "default": {
            "description": "successful operation"
          }
        },
        "requestBody": {
          "$ref": "#/components/requestBodies/FSCreateLeadArray"
        }
      }
    },
    "/dataservices/retrieve non finance categories": {
      "get": {
        "tags": [
          "Sales Reports"
        ],
        "summary": "Retrieve Non Finance Categories",
        "description": "<p class=\"western\">This represents the non-financial/ KPI categories that are used as a part of the sales report. To retrieve the KPI categories, a GET request is to be sent to the API endpoint along with the other required parameters.</p><p class=\"western\"><strong>Production API Endpoint : </strong><span style=\"color: #0563c1;\"><u><a href=\"https://finance.franconnect.net/manage-finance/sales/categories/kpi-categories/franchiseeNo/%7Bfranchisee_number%7D/reportPeriod/%7BreportPeriod%7D\">https://finance.franconnect.net/manage-finance/sales/categories/kpi-categories/franchiseeNo/{franchisee_number}/reportPeriod/{reportPeriod}</a></u></span></p><p class=\"western\"><strong>UAT API Endpoint &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; : </strong><span style=\"color: #0563c1;\"><u><a href=\"https://finance.franconnectuat.net/manage-finance/sales/categories/kpi-categories/franchiseeNo/%7Bfranchisee_number%7D/reportPeriod/%7BreportPeriod%7D\">https://finance.franconnectuat.net/manage-finance/sales/categories/kpi-categories/franchiseeNo/{franchisee_number}/reportPeriod/{reportPeriod}</a></u></span></p><p class=\"western\"><strong>Operation Name &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; : </strong>&nbsp;GET</p><p class=\"western\">&nbsp;</p><p class=\"western\">A previous section already talks about how to retrieve the report periods for which a location is yet to report sales for. This can be accessed&nbsp;<u><a href=\"#operation/Retrieve_Sales_Reports_Periods\">here</a></u>. Once this is done, a particular report period selected, and the financial categories corresponding to that report period retrieved (click&nbsp;<span style=\"color: #0563c1;\"><u><a href=\"#operation/Retrieve_Finance_Categories\">here</a></u></span>&nbsp;to know more on how to retrieve financial categories in a particular report period), the next step is to perform a GET operation on the corresponding endpoint (mentioned above) to retrieve a list of non-financial/ KPI categories that are available for the given report period.</p><p class=\"western\"><strong>Note</strong>: Some of the clients may or may not have non-financial/ KPI categories set up in their sales report. In case the sales reports do not contain non-financial/ KPI categories, this step can be omitted.</p>",
        "responses": {
          "default": {
            "description": "successful operation"
          }
        },
        "requestBody": {
          "$ref": "#/components/requestBodies/FSCreateLeadArray"
        }
      }
    },
    "/dataservices/retrieve additional invoice items": {
      "get": {
        "tags": [
          "Sales Reports"
        ],
        "summary": "Retrieve Additional Invoice Items",
        "description": "<p class=\"western\">This represents the additional items apart from the&nbsp;<u><a href=\"#operation/Retrieve_Finance_Categories\">finance</a></u>&nbsp;and the&nbsp;<u><a href=\"#operation/Retrieve_Non-Finance_Categories\">non-financial/KPI</a></u>&nbsp;categories that the franchisor would like to include in their sales reports. In order to retrieve the Additional Invoice Items, a GET type of request is to be made to the API endpoint along with the other required parameters.</p><p class=\"western\"><strong>Production API Endpoint : </strong><span style=\"color: #0563c1;\"><u><a href=\"https://finance.franconnect.net/manage-finance/sales/categories/addtional-line-items/franchiseeNo/%7Bfranchisee_number%7D/reportPeriod/%7BreportPeriod%7D\">https://finance.franconnect.net/manage-finance/sales/categories/addtional-line-items/franchiseeNo/{franchisee_number}/reportPeriod/{reportPeriod}</a></u></span></p><p class=\"western\"><strong>UAT API Endpoint &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; : </strong><span style=\"color: #0563c1;\"><u><a href=\"https://finance.franconnectuat.net/manage-finance/sales/categories/addtional-line-items/franchiseeNo/%7Bfranchisee_number%7D/reportPeriod/%7BreportPeriod%7D\">https://finance.franconnectuat.net/manage-finance/sales/categories/addtional-line-items/franchiseeNo/{franchisee_number}/reportPeriod/{reportPeriod}</a></u></span></p><p class=\"western\"><strong>Operation Name &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; : </strong>&nbsp;GET</p><p class=\"western\">&nbsp;</p><p class=\"western\">Similar to non-financial/KPI categories, the &ldquo;additional invoice items&rdquo; are optional. While they can be configured from &ldquo;Admin &gt; Finance &gt; Configure Additional Invoice Item(s)&rdquo;, some franchisors have it configured as part of their sales reports while some choose not to. In case it is not configured, retrieving &ldquo;additional invoice items&rdquo; would result in an empty data set. However, it should not be omitted while creating and/ or updating sales report(s).</p>",
        "responses": {
          "default": {
            "description": "successful operation"
          }
        },
        "requestBody": {
          "$ref": "#/components/requestBodies/FSCreateLeadArray"
        }
      }
    },
    "/dataservices/retrieve sales report status": {
      "get": {
        "tags": [
          "Sales Reports"
        ],
        "summary": "Retrieve Sales Report Status",
        "description": "<p class=\"western\">This section lists the various status that can be attributed to sales reports and can therefore be used as a search constraint in retrieve operations.</p><p class=\"western\">&nbsp;</p><center><table width=\"762\" cellspacing=\"0\" cellpadding=\"6\"><colgroup><col width=\"144\" /> <col width=\"592\" /> </colgroup><tbody><tr valign=\"top\"><td style=\"background: #5b9bd5;\" bgcolor=\"#5b9bd5\" width=\"144\"><p class=\"western\"><strong>Key</strong></p></td><td style=\"background: #5b9bd5;\" bgcolor=\"#5b9bd5\" width=\"592\"><p class=\"western\"><strong>Name</strong></p></td></tr><tr valign=\"top\"><td style=\"background: #deeaf6;\" bgcolor=\"#deeaf6\" width=\"144\"><p class=\"western\"><strong>P</strong></p></td><td style=\"background: #deeaf6;\" bgcolor=\"#deeaf6\" width=\"592\"><p class=\"western\">Waiting for approval</p></td></tr><tr valign=\"top\"><td style=\"background: #ffffff;\" bgcolor=\"#ffffff\" width=\"144\"><p class=\"western\"><strong>A</strong></p></td><td style=\"background: #ffffff;\" bgcolor=\"#ffffff\" width=\"592\"><p class=\"western\">Approved</p></td></tr><tr valign=\"top\"><td style=\"background: #deeaf6;\" bgcolor=\"#deeaf6\" width=\"144\"><p class=\"western\"><strong>R</strong></p></td><td style=\"background: #deeaf6;\" bgcolor=\"#deeaf6\" width=\"592\"><p class=\"western\">Rejected</p></td></tr><tr valign=\"top\"><td style=\"background: #ffffff;\" bgcolor=\"#ffffff\" width=\"144\"><p class=\"western\"><strong>I</strong></p></td><td style=\"background: #ffffff;\" bgcolor=\"#ffffff\" width=\"592\"><p class=\"western\">Invoiced</p></td></tr><tr valign=\"top\"><td style=\"background: #deeaf6;\" bgcolor=\"#deeaf6\" width=\"144\"><p class=\"western\"><strong>K</strong></p></td><td style=\"background: #deeaf6;\" bgcolor=\"#deeaf6\" width=\"592\"><p class=\"western\">Waiting for Acknowledgement</p></td></tr></tbody></table></center><p class=\"western\">&nbsp;</p><p class=\"western\">A &ldquo;GET&rdquo; request is to be made to the API endpoint, along with other required details, to retrieve the report status and their corresponding keys.</p><p class=\"western\"><strong>Production API Endpoint : </strong><span style=\"color: #0563c1;\"><u><a href=\"https://finance.franconnect.net/manage-finance/sales/status\">https://finance.franconnect.net/manage-finance/sales/status</a></u></span></p><p class=\"western\"><strong>UAT API Endpoint &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; : </strong><span style=\"color: #0563c1;\"><u><a href=\"https://finance.franconnectuat.net/manage-finance/sales/status\">https://finance.franconnectuat.net/manage-finance/sales/status</a></u></span></p><p class=\"western\"><strong>Operation Name &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; : </strong>&nbsp;POST</p>",
        "responses": {
          "default": {
            "description": "successful operation"
          }
        },
        "requestBody": {
          "$ref": "#/components/requestBodies/FSCreateLeadArray"
        }
      }
    },
    "/dataservices/create new sales report": {
      "post": {
        "tags": [
          "Sales Reports"
        ],
        "summary": "Create New Sales Report",
        "description": "<p class=\"western\">Sales report can be created for a location for a given period for which the sales has not been filled yet. In order to do so, a POST type request is to be made to the specified endpoint.</p><p class=\"western\"><strong>Production API Endpoint : </strong><span style=\"color: #0563c1;\"><u><a href=\"https://finance.franconnect.net/manage-finance/sales/\">https://finance.franconnect.net/manage-finance/sales/</a></u></span></p><p class=\"western\"><strong>UAT API Endpoint &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; : </strong><span style=\"color: #0563c1;\"><u><a href=\"https://finance.franconnectuat.net/manage-finance/sales/\">https://finance.franconnectuat.net/manage-finance/sales/</a></u></span></p><p class=\"western\"><strong>Operation Name &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; : </strong>&nbsp;POST</p><p class=\"western\">&nbsp;</p><p class=\"western\">Other details that are to be included in the request are:</p><ol><li><p>&ldquo;Authorization&rdquo; as the key name with its value as &ldquo;Bearer &lt;acess_token&gt;&rdquo;. Steps to retrieve the access_token is mentioned <u><a href=\"#tag/Authentication\">here</a></u>.</p></li><li><p>&ldquo;Content-Type&rdquo; as the key and its value as &ldquo;application/json&rdquo;.</p></li><li><p>&ldquo;X-TenantId&rdquo; as the key and its value as per the FranConnect system&rsquo;s login URL. Steps to determine the &ldquo;X-TenantId&rdquo; is mentioned <u><a href=\"#tag/Authentication\">here</a></u>.</p></li><li><p>The body of the request should contain the finance categories, the KPI categories, and the additional line items.</p></li></ol><p class=\"western\">The response provides &ldquo;reportNo&rdquo; and &ldquo;salesReportID&rdquo;. The &ldquo;reportNo&rdquo; represents the sales report number as seen on the UI side whereas the &ldquo;salesReportID&rdquo; is the internal unique identifier for that sales report.</p>",
        "responses": {
          "default": {
            "description": "successful operation"
          }
        },
        "requestBody": {
          "$ref": "#/components/requestBodies/FSCreateLeadArray"
        }
      }
    },
    "/dataservices/retrieve sales": {
      "post": {
        "tags": [
          "Sales Reports"
        ],
        "summary": "Retrieve Sales",
        "description": "<p class=\"western\">An existing sales report can be retrieved by making a POST type of request to the specified API endpoint.</p><p class=\"western\"><strong>Production API Endpoint : </strong><span style=\"color: #0563c1;\"><u><a href=\"https://finance.franconnect.net/manage-finance/sales/filter\">https://finance.franconnect.net/manage-finance/sales/filter</a></u></span></p><p class=\"western\"><strong>UAT API Endpoint &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; : </strong><span style=\"color: #0563c1;\"><u><a href=\"https://finance.franconnectuat.net/manage-finance/sales/filter\">https://finance.franconnectuat.net/manage-finance/sales/filter</a></u></span></p><p class=\"western\"><strong>Operation Name &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; : </strong>&nbsp;POST</p><p class=\"western\">&nbsp;</p><p class=\"western\">Other details that are to be included in the request are:</p><ol><li><p>&ldquo;Authorization&rdquo; as the key name with its value as &ldquo;Bearer &lt;acess_token&gt;&rdquo;. Steps to retrieve the access_token is mentioned <u><a href=\"#tag/Authentication\">here</a></u>.</p></li><li><p>&ldquo;Content-Type&rdquo; as the key and its value as &ldquo;application/json&rdquo;.</p></li><li><p>&ldquo;X-TenantId&rdquo; as the key and its value as per the FranConnect system&rsquo;s login URL. Steps to determine the &ldquo;X-TenantId&rdquo; is mentioned <u><a href=\"#tag/Authentication\">here</a></u>.</p></li><li><p>The body of the request should contain the constraints that would be used to filter out the sales report(s).</p></li></ol><p class=\"western\"><br /><strong>Note</strong>: In the example given, the &ldquo;franchiseeNo&rdquo; has been used as a &lsquo;constraints&rsquo; criterion. Other acceptable values of constraints that can be used to filter and retrieve sales reports are shown as below.</p><p class=\"western\">&nbsp;</p><center><table width=\"623\" cellspacing=\"0\" cellpadding=\"7\"><colgroup><col width=\"157\" /> <col width=\"135\" /> <col width=\"223\" /> <col width=\"51\" /> </colgroup><tbody><tr valign=\"top\"><td style=\"background: #4472c4;\" bgcolor=\"#4472c4\" width=\"157\"><p class=\"western\" align=\"center\"><strong><span style=\"color: #00000a;\">Field</span></strong></p><p class=\"western\" align=\"center\">&nbsp;</p></td><td style=\"background: #4472c4;\" bgcolor=\"#4472c4\" width=\"135\"><p class=\"western\" align=\"center\"><strong><span style=\"color: #00000a;\">Field Description</span></strong></p></td><td style=\"background: #4472c4;\" bgcolor=\"#4472c4\" width=\"223\"><p class=\"western\" align=\"center\"><strong><span style=\"color: #00000a;\">Applied Clause</span></strong></p><p class=\"western\" align=\"center\">&nbsp;</p></td><td style=\"background: #4472c4;\" bgcolor=\"#4472c4\" width=\"51\"><p class=\"western\" align=\"center\"><strong><span style=\"color: #00000a;\">Format</span></strong></p></td></tr><tr valign=\"top\"><td style=\"background: #d9e2f3;\" bgcolor=\"#d9e2f3\" width=\"157\"><p class=\"western\" align=\"center\"><strong>reportNo</strong></p></td><td style=\"background: #d9e2f3;\" bgcolor=\"#d9e2f3\" width=\"135\"><p class=\"western\" align=\"center\">Sales Report Number as seen in UI</p></td><td style=\"background: #d9e2f3;\" bgcolor=\"#d9e2f3\" width=\"223\"><p class=\"western\" align=\"center\">EQUAL, IN</p></td><td style=\"background: #d9e2f3;\" bgcolor=\"#d9e2f3\" width=\"51\"><p class=\"western\" align=\"center\">String</p></td></tr><tr valign=\"top\"><td width=\"157\"><p class=\"western\" align=\"center\"><strong>salesReportID</strong></p></td><td width=\"135\"><p class=\"western\" align=\"center\">Internal Unique Reference Number of the Sales Report</p></td><td width=\"223\"><p class=\"western\" align=\"center\">EQUAL, IN</p></td><td width=\"51\"><p class=\"western\" align=\"center\">String</p></td></tr><tr valign=\"top\"><td style=\"background: #d9e2f3;\" bgcolor=\"#d9e2f3\" width=\"157\"><p class=\"western\" align=\"center\"><strong>franchiseeNo</strong></p></td><td style=\"background: #d9e2f3;\" bgcolor=\"#d9e2f3\" width=\"135\"><p class=\"western\" align=\"center\">Internal Unique Reference Number of the location</p></td><td style=\"background: #d9e2f3;\" bgcolor=\"#d9e2f3\" width=\"223\"><p class=\"western\" align=\"center\">EQUAL, IN</p></td><td style=\"background: #d9e2f3;\" bgcolor=\"#d9e2f3\" width=\"51\"><p class=\"western\" align=\"center\">String</p></td></tr><tr valign=\"top\"><td width=\"157\"><p class=\"western\" align=\"center\"><strong>reportPeriodStart/End</strong></p></td><td width=\"135\"><p class=\"western\" align=\"center\">Report Period Start/ End Date in YYYY-MM-DD format</p></td><td width=\"223\"><p class=\"western\" align=\"center\">EQUAL, GREATER_THAN,</p><p class=\"western\" align=\"center\">LESS_THAN, GREATER_THAN_OR_EQUAL,</p><p class=\"western\" align=\"center\">LESS_THAN_OR_EQUAL, BETWEEN</p></td><td width=\"51\"><p class=\"western\" align=\"center\">Date</p></td></tr><tr valign=\"top\"><td style=\"background: #d9e2f3;\" bgcolor=\"#d9e2f3\" width=\"157\"><p class=\"western\" align=\"center\"><strong>reportSubmitDate</strong></p></td><td style=\"background: #d9e2f3;\" bgcolor=\"#d9e2f3\" width=\"135\"><p class=\"western\" align=\"center\">Report Submit Date in YYYY-MM-DD format</p></td><td style=\"background: #d9e2f3;\" bgcolor=\"#d9e2f3\" width=\"223\"><p class=\"western\" align=\"center\">EQUAL, GREATER_THAN,</p><p class=\"western\" align=\"center\">LESS_THAN, GREATER_THAN_OR_EQUAL,</p><p class=\"western\" align=\"center\">LESS_THAN_OR_EQUAL, BETWEEN</p></td><td style=\"background: #d9e2f3;\" bgcolor=\"#d9e2f3\" width=\"51\"><p class=\"western\" align=\"center\">Date</p></td></tr><tr valign=\"top\"><td width=\"157\"><p class=\"western\" align=\"center\"><strong>totalSales</strong></p></td><td width=\"135\"><p class=\"western\" align=\"center\">Total Sales</p></td><td width=\"223\"><p class=\"western\" align=\"center\">GREATER_THAN,</p><p class=\"western\" align=\"center\">LESS_THAN</p></td><td width=\"51\"><p class=\"western\" align=\"center\">String</p></td></tr><tr valign=\"top\"><td style=\"background: #d9e2f3;\" bgcolor=\"#d9e2f3\" width=\"157\"><p class=\"western\" align=\"center\"><strong>reportStatus</strong></p></td><td style=\"background: #d9e2f3;\" bgcolor=\"#d9e2f3\" width=\"135\"><p class=\"western\" align=\"center\">Report Status of the Sales Report</p></td><td style=\"background: #d9e2f3;\" bgcolor=\"#d9e2f3\" width=\"223\"><p class=\"western\" align=\"center\">EQUAL, IN</p></td><td style=\"background: #d9e2f3;\" bgcolor=\"#d9e2f3\" width=\"51\"><p class=\"western\" align=\"center\">String</p></td></tr><tr valign=\"top\"><td width=\"157\"><p class=\"western\" align=\"center\"><strong>reportType</strong></p></td><td width=\"135\"><p class=\"western\" align=\"center\">Report Type of the Sales Report</p></td><td width=\"223\"><p class=\"western\" align=\"center\">EQUAL, IN</p></td><td width=\"51\"><p class=\"western\" align=\"center\">String</p></td></tr></tbody></table></center><p class=\"western\">&nbsp;</p>",
        "responses": {
          "default": {
            "description": "successful operation"
          }
        },
        "requestBody": {
          "$ref": "#/components/requestBodies/FSCreateLeadArray"
        }
      }
    },
    "/dataservices/update existing sales report": {
      "post": {
        "tags": [
          "Sales Reports"
        ],
        "summary": "Update Existing Sales Report",
        "description": "<p class=\"western\">The update operation is performed to update an existing sales report for a given franchise location. In order for an existing sales report to be updated, a POST type of request is to be made to the specified API endpoint.</p><p class=\"western\"><strong>Production API Endpoint : </strong><span style=\"color: #0563c1;\"><u><a href=\"https://finance.franconnect.net/manage-finance/sales/%7BsalesReportID%7D\">https://finance.franconnect.net/manage-finance/sales/{salesReportID}</a></u></span></p><p class=\"western\"><strong>UAT API Endpoint &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; : </strong><span style=\"color: #0563c1;\"><u><a href=\"https://finance.franconnectuat.net/manage-finance/sales/%7BsalesReportID%7D\">https://finance.franconnectuat.net/manage-finance/sales/{salesReportID}</a></u></span></p><p class=\"western\"><strong>Operation Name &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; : </strong>&nbsp;PUT</p><p class=\"western\">&nbsp;</p><p class=\"western\">Other details that are to be included in the request are:</p><ol><li><p>&ldquo;Authorization&rdquo; as the key name with its value as &ldquo;Bearer &lt;acess_token&gt;&rdquo;. Steps to retrieve the access_token is mentioned <u><a href=\"#tag/Authentication\">here</a></u>.</p></li><li><p>&ldquo;Content-Type&rdquo; as the key and its value as &ldquo;application/json&rdquo;.</p></li><li><p>&ldquo;X-TenantId&rdquo; as the key and its value as per the FranConnect system&rsquo;s login URL. Steps to determine the &ldquo;X-TenantId&rdquo; is mentioned <u><a href=\"#tag/Authentication\">here</a></u>.</p></li><li><p>The &ldquo;salesReportID&rdquo; mentioned in the API endpoint refers to the internal unique ID for the sales report. Users can fetch this information by retrieving the sales report details on the basis of &ldquo;reportNo&rdquo; or any other parameter mentioned <u><a href=\"#operation/Retrieve_Sales\">here</a></u>.</p></li></ol><p class=\"western\"><strong>Note</strong>: It is to be noted that the sales report can only be modified as long as it is not approved. Once it is approved, only adjustments can be made to the sales report.</p>",
        "responses": {
          "default": {
            "description": "successful operation"
          }
        },
        "requestBody": {
          "$ref": "#/components/requestBodies/FSCreateLeadArray"
        }
      }
    },
    "/dataservices/retrieve royalty invoices": {
      "post": {
        "tags": [
          "Royalties"
        ],
        "summary": "Retrieve Royalty Invoices",
        "description": "<p class=\"western\">Royalty reports are generated on the basis of sales submitted for the locations and can be retrieved in a similar way as retrieving a sales report. To retrieve a royalty report, a POST type of request is to be made to the specified endpoint.</p><p class=\"western\"><strong>Production API Endpoint : </strong><span style=\"color: #0563c1;\"><u><a href=\"https://finance.franconnect.net/manage-finance/royalties/filter\">https://finance.franconnect.net/manage-finance/royalties/filter</a></u></span></p><p class=\"western\"><strong>UAT API Endpoint &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; : </strong><span style=\"color: #0563c1;\"><u><a href=\"https://finance.franconnectuat.net/manage-finance/royalties/filter\">https://finance.franconnectuat.net/manage-finance/royalties/filter</a></u></span></p><p class=\"western\"><strong>Operation Name &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; : </strong> POST</p><p class=\"western\">&nbsp;</p><p class=\"western\">Other details that are to be included in the request are:</p><ol><li><p>&ldquo;Authorization&rdquo; as the key name with its value as &ldquo;Bearer &lt;acess_token&gt;&rdquo;. Steps to retrieve the access_token is mentioned <u><a href=\"#tag/Authentication\">here</a></u>.</p></li><li><p>&ldquo;Content-Type&rdquo; as the key and its value as &ldquo;application/json&rdquo;.</p></li><li><p>&ldquo;X-TenantId&rdquo; as the key and its value as per the FranConnect system&rsquo;s login URL. Steps to determine the &ldquo;X-TenantId&rdquo; is mentioned <u><a href=\"#tag/Authentication\">here</a></u>.</p></li><li><p>The body of the request should contain the constraints that would be used to filter out the royalty invoice(s).</p></li></ol><p class=\"western\">Here is a list of all the attributes that can be used as constraints while retrieving royalty reports along with the &ldquo;clauses&rdquo; that are supported for each constraint.</p><p class=\"western\">&nbsp;</p><center><table width=\"735\" cellspacing=\"0\" cellpadding=\"7\"><colgroup><col width=\"134\" /> <col width=\"253\" /> <col width=\"223\" /> <col width=\"66\" /> </colgroup><tbody><tr valign=\"top\"><td style=\"background: #4472c4;\" bgcolor=\"#4472c4\" width=\"134\" height=\"30\"><p class=\"western\"><span style=\"color: #ffffff;\"><strong>Field</strong></span></p></td><td style=\"background: #4472c4;\" bgcolor=\"#4472c4\" width=\"253\"><p class=\"western\"><span style=\"color: #ffffff;\"><strong>Field Display Name</strong></span></p></td><td style=\"background: #4472c4;\" bgcolor=\"#4472c4\" width=\"223\"><p class=\"western\"><span style=\"color: #ffffff;\"><strong>Applicable Clauses</strong></span></p></td><td style=\"background: #4472c4;\" bgcolor=\"#4472c4\" width=\"66\"><p class=\"western\"><span style=\"color: #ffffff;\"><strong>Format</strong></span></p></td></tr><tr valign=\"top\"><td style=\"background: #d9e2f3;\" bgcolor=\"#d9e2f3\" width=\"134\"><p class=\"western\"><strong>franchiseRoyaltyID</strong></p></td><td style=\"background: #d9e2f3;\" bgcolor=\"#d9e2f3\" width=\"253\"><p class=\"western\">Internal Unique Reference Number of the Royalty Invoicce</p></td><td style=\"background: #d9e2f3;\" bgcolor=\"#d9e2f3\" width=\"223\"><p class=\"western\">EQUAL, IN</p></td><td style=\"background: #d9e2f3;\" bgcolor=\"#d9e2f3\" width=\"66\"><p class=\"western\">String</p></td></tr><tr valign=\"top\"><td width=\"134\" height=\"9\"><p class=\"western\"><strong>invoiceNO</strong></p></td><td width=\"253\"><p class=\"western\">Royalty Invoice Number as seen in UI</p></td><td width=\"223\"><p class=\"western\">EQUAL, IN</p></td><td width=\"66\"><p class=\"western\">String</p></td></tr><tr valign=\"top\"><td style=\"background: #d9e2f3;\" bgcolor=\"#d9e2f3\" width=\"134\"><p class=\"western\"><strong>franchiseeNo</strong></p></td><td style=\"background: #d9e2f3;\" bgcolor=\"#d9e2f3\" width=\"253\"><p class=\"western\">Internal Unique Reference Number of the location</p></td><td style=\"background: #d9e2f3;\" bgcolor=\"#d9e2f3\" width=\"223\"><p class=\"western\">EQUAL, IN</p></td><td style=\"background: #d9e2f3;\" bgcolor=\"#d9e2f3\" width=\"66\"><p class=\"western\">String</p></td></tr><tr valign=\"top\"><td width=\"134\" height=\"85\"><p class=\"western\"><strong>invoiceDate</strong></p></td><td width=\"253\"><p class=\"western\">Invoice Date</p></td><td width=\"223\"><p class=\"western\">EQUAL, GREATER_THAN,</p><p class=\"western\">LESS_THAN, GREATER_THAN_OR_EQUAL,</p><p class=\"western\">LESS_THAN_OR_EQUAL, BETWEEN</p></td><td width=\"66\"><p class=\"western\">Date</p></td></tr><tr valign=\"top\"><td style=\"background: #d9e2f3;\" bgcolor=\"#d9e2f3\" width=\"134\"><p class=\"western\"><strong>paymentStatus</strong></p></td><td style=\"background: #d9e2f3;\" bgcolor=\"#d9e2f3\" width=\"253\"><p class=\"western\">Payment Status</p></td><td style=\"background: #d9e2f3;\" bgcolor=\"#d9e2f3\" width=\"223\"><p class=\"western\">EQUAL, IN</p></td><td style=\"background: #d9e2f3;\" bgcolor=\"#d9e2f3\" width=\"66\"><p class=\"western\">String</p></td></tr></tbody></table></center><p class=\"western\">&nbsp;</p>",
        "responses": {
          "default": {
            "description": "successful operation"
          }
        },
        "requestBody": {
          "$ref": "#/components/requestBodies/FSCreateLeadArray"
        }
      }
    },
    "/dataservices/get royalties payment status": {
      "post": {
        "tags": [
          "Royalties"
        ],
        "summary": "Retrieve Royalties Payment Status",
        "description": "<p class=\"western\">The payment status for Royalty reports can be retrieved by making a GET type of request is to be made to the specified endpoint.</p><p class=\"western\"><strong>Production API Endpoint : </strong><span style=\"color: #0563c1;\"><u><a href=\"https://finance.franconnect.net/manage-finance/royalties/status\">https://finance.franconnect.net/manage-finance/royalties/status</a></u></span></p><p class=\"western\"><strong>UAT API Endpoint &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; : </strong><span style=\"color: #0563c1;\"><u><a href=\"https://finance.franconnectuat.net/manage-finance/royalties/status\">https://finance.franconnectuat.net/manage-finance/royalties/status</a></u></span></p><p class=\"western\"><strong>Operation Name &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; : </strong>GET</p><p class=\"western\">&nbsp;</p><p class=\"western\">Other details that are to be included in the request are:</p><ol><li><p>&ldquo;Authorization&rdquo; as the key name with its value as &ldquo;Bearer &lt;acess_token&gt;&rdquo;. Steps to retrieve the access_token is mentioned <u><a href=\"#tag/Authentication\">here</a></u>.</p></li><li><p>&ldquo;Content-Type&rdquo; as the key and its value as &ldquo;application/json&rdquo;.</p></li><li><p>&ldquo;X-TenantId&rdquo; as the key and its value as per the FranConnect system&rsquo;s login URL. Steps to determine the &ldquo;X-TenantId&rdquo; is mentioned <u><a href=\"#tag/Authentication\">here</a></u>.</p></li></ol><p class=\"western\">This would provide a list of royalty payment status that are available in the system as well as their corresponding keys.</p><p class=\"western\">&nbsp;</p><p class=\"western\">&nbsp;</p><center><table width=\"762\" cellspacing=\"0\" cellpadding=\"7\"><colgroup><col width=\"228\" /> <col width=\"505\" /> </colgroup><tbody><tr valign=\"top\"><td style=\"background: #4472c4;\" bgcolor=\"#4472c4\" width=\"228\"><p class=\"western\"><span style=\"color: #ffffff;\"><strong>Key</strong></span></p></td><td style=\"background: #4472c4;\" bgcolor=\"#4472c4\" width=\"505\"><p class=\"western\"><span style=\"color: #ffffff;\"><strong>Payment Status</strong></span></p></td></tr><tr valign=\"top\"><td style=\"background: #d9e2f3;\" bgcolor=\"#d9e2f3\" width=\"228\"><p class=\"western\"><strong>N</strong></p></td><td style=\"background: #d9e2f3;\" bgcolor=\"#d9e2f3\" width=\"505\"><p class=\"western\">Unpaid</p></td></tr><tr valign=\"top\"><td width=\"228\"><p class=\"western\"><strong>P</strong></p></td><td width=\"505\"><p class=\"western\">Partially Paid</p></td></tr><tr valign=\"top\"><td style=\"background: #d9e2f3;\" bgcolor=\"#d9e2f3\" width=\"228\"><p class=\"western\"><strong>C</strong></p></td><td style=\"background: #d9e2f3;\" bgcolor=\"#d9e2f3\" width=\"505\"><p class=\"western\">Fully Paid</p></td></tr></tbody></table></center>",
        "responses": {
          "default": {
            "description": "successful operation"
          }
        },
        "requestBody": {
          "$ref": "#/components/requestBodies/FSCreateLeadArray"
        }
      }
    },
    "/dataservices/retrieve payments": {
      "post": {
        "tags": [
          "Payments"
        ],
        "summary": "Retrieve Payments",
        "description": "<p class=\"western\">Payments that are made against a royalty report can be retrieved using the Payments endpoint. A payment can be retrieved by making a POST type of request to the specified API endpoint.</p><p class=\"western\"><strong>Production API Endpoint : </strong>https://finance.franconnect.net/manage-finance/payments/filter</p><p class=\"western\"><strong>UAT API Endpoint &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; : </strong> https://finance.franconnectuat.net/manage-finance/payments/filter</p><p class=\"western\"><strong>Operation Name &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; : </strong> POST</p><p class=\"western\">&nbsp;</p><p class=\"western\">Other details that are to be included in the request are:</p><p class=\"western\">1. &ldquo;Authorization&rdquo; as the key name with its value as &ldquo;Bearer &lt;acess_token&gt;&rdquo;. Steps to retrieve the access_token is mentioned <span style=\"color: #0563c1;\"><u><a href=\"#tag/Authentication\">here</a></u></span>.</p><p class=\"western\">2. &ldquo;Content-Type&rdquo; as the key and its value as &ldquo;application/json&rdquo;.</p><p class=\"western\">3. &ldquo;X-TenantId&rdquo; as the key and its value as per the FranConnect system&rsquo;s login URL. Steps to determine the &ldquo;X-TenantId&rdquo; is mentioned <span style=\"color: #0563c1;\"><u><a href=\"#tag/Authentication\">here</a></u></span>.</p><p class=\"western\">4. The body of the request should contain the constraints that would be used to filter out the payment(s).</p>",
        "responses": {
          "default": {
            "description": "successful operation"
          }
        },
        "requestBody": {
          "$ref": "#/components/requestBodies/FSCreateLeadArray"
        }
      }
    },
    "/dataservices/retrieve p&l statements periods": {
      "get": {
        "tags": [
          "Profit and Loss Statements"
        ],
        "summary": "Retrieve Profit and Loss Periods",
        "description": "<p class=\"western\">This endpoint is used to retrieve the Profit and Loss report periods for locations against which data is yet to be filled. To retrieve these report periods, a POST type of call is to be made to the specified endpoint.</p><p class=\"western\"><strong>Production API Endpoint : </strong><span style=\"color: #0563c1;\"><u><a href=\"https://finance.franconnect.net/manage-finance/profit-loss/periods/franchiseeNo/%7Bfranchise_number%7D\">https://finance.franconnect.net/manage-finance/profit-loss/periods/franchiseeNo/{franchise_number}</a></u></span></p><p class=\"western\"><strong>UAT API Endpoint &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; : </strong><span style=\"color: #0563c1;\"><u><a href=\"https://finance.franconnectuat.net/manage-finance/profit-loss/periods/franchiseeNo/%7Bfranchise_number%7D\">https://finance.franconnectuat.net/manage-finance/profit-loss/periods/franchiseeNo/{franchise_number}</a></u></span></p><p class=\"western\"><strong>Operation Name &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; : </strong>&nbsp;GET</p><p class=\"western\">&nbsp;</p><p class=\"western\">Other details that are to be included in the request are:</p><ol><li><p>&ldquo;Authorization&rdquo; as the key name with its value as &ldquo;Bearer &lt;acess_token&gt;&rdquo;. Steps to retrieve the access_token is mentioned <u><a href=\"#tag/Authentication\">here</a></u>.</p></li><li><p>&ldquo;Content-Type&rdquo; as the key and its value as &ldquo;application/json&rdquo;.</p></li><li><p>&ldquo;X-TenantId&rdquo; as the key and its value as per the FranConnect system&rsquo;s login URL. Steps to determine the &ldquo;X-TenantId&rdquo; is mentioned <u><a href=\"#tag/Authentication\">here</a></u>.</p></li></ol><p class=\"western\">This would provide a list of statement periods for which the mentioned franchise is yet to declare its P&amp;L statement for.</p>",
        "responses": {
          "default": {
            "description": "successful operation"
          }
        },
        "requestBody": {
          "$ref": "#/components/requestBodies/FSCreateLeadArray"
        }
      }
    },
    "/dataservices/retrieve profit loss categories": {
      "get": {
        "tags": [
          "Profit and Loss Statements"
        ],
        "summary": "Retrieve Profit Loss Categories",
        "description": "<p class=\"western\">These are used to represent the categories that are present in P&amp;L statements against which income and expenses are to be entered for each franchisee. To retrieve the Profit and Loss categories, a GET type of call is to be made to the specified endpoint.</p><p class=\"western\"><strong>Production API Endpoint : </strong>https://finance.franconnect.net/manage-finance/profit-loss/categories</p><p class=\"western\"><strong>UAT API Endpoint &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; : </strong>https://finance.franconnectuat.net/manage-finance/profit-loss/categories</p><p class=\"western\"><strong>Operation Name &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; : </strong>&nbsp;GET</p><p class=\"western\">&nbsp;</p><p class=\"western\">Other details that are to be included in the request are:</p><ol><li><p>&ldquo;Authorization&rdquo; as the key name with its value as &ldquo;Bearer &lt;acess_token&gt;&rdquo;. Steps to retrieve the access_token is mentioned <u><a href=\"#tag/Authentication\">here</a></u>.</p></li><li><p>&ldquo;Content-Type&rdquo; as the key and its value as &ldquo;application/json&rdquo;.</p></li><li><p>&ldquo;X-TenantId&rdquo; as the key and its value as per the FranConnect system&rsquo;s login URL. Steps to determine the &ldquo;X-TenantId&rdquo; is mentioned <u><a href=\"#tag/Authentication\">here</a></u>.</p></li></ol><p class=\"western\">The response contains all the P&amp;L categories that are configured in the system and a placeholder where the &ldquo;amount&rdquo; can be filled in against that corresponding category. This information is to be used to fill in profit in loss details while creating and/ or updating profit and loss reports.</p><p class=\"western\">&nbsp;</p>",
        "responses": {
          "default": {
            "description": "successful operation"
          }
        },
        "requestBody": {
          "$ref": "#/components/requestBodies/FSCreateLeadArray"
        }
      }
    },
    "/dataservices/create new profit loss statements": {
      "post": {
        "tags": [
          "Profit and Loss Statements"
        ],
        "summary": "Create New Profit Loss Statements",
        "description": "<p class=\"western\">This operation is used to create a new P&amp;L statement in the system. In order to do so, a POST type of call is to be made to the specified endpoint.</p><p class=\"western\"><strong>Production API Endpoint : </strong><span style=\"color: #0563c1;\"><u><a href=\"https://finance.franconnect.net/manage-finance/profit-loss\">https://finance.franconnect.net/manage-finance/profit-loss</a></u></span></p><p class=\"western\"><strong>UAT API Endpoint &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; : </strong><span style=\"color: #0563c1;\"><u><a href=\"https://finance.franconnectuat.net/manage-finance/profit-loss\">https://finance.franconnectuat.net/manage-finance/profit-loss</a></u></span></p><p class=\"western\"><strong>Operation Name &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; : </strong>POST</p><p class=\"western\">&nbsp;</p><p class=\"western\">Other details that are to be included in the request are:</p><ol><li><p>&ldquo;Authorization&rdquo; as the key name with its value as &ldquo;Bearer &lt;acess_token&gt;&rdquo;. Steps to retrieve the access_token is mentioned <u><a href=\"#tag/Authentication\">here</a></u>.</p></li><li><p>&ldquo;Content-Type&rdquo; as the key and its value as &ldquo;application/json&rdquo;.</p></li><li><p>&ldquo;X-TenantId&rdquo; as the key and its value as per the FranConnect system&rsquo;s login URL. Steps to determine the &ldquo;X-TenantId&rdquo; is mentioned <u><a href=\"#tag/Authentication\">here</a></u>.</p></li><li><p>The body of the request should contain the profit and loss categories. Details on retrieving Profit and Loss categories is described <u><a href=\"#operation/Retrieve_ProfitLoss_Categories\">here</a></u>.</p></li></ol><p class=\"western\">A POST request is to be made to the endpoint specified above with &ldquo;Content-Type&rdquo; as &ldquo;application/json&rdquo;, &ldquo;Authorization&rdquo; as &ldquo;bearer &lt;&lt;accessToken&gt;&gt;&rdquo; (where the &lt;&lt;accessToken&gt;&gt; is to be replaced by the actual access token generated in step a), and &ldquo;X-TenantId&rdquo; as the login URL of the user&rsquo;s FranConnect system prior to&rdquo;/fc&rdquo;.</p><p class=\"western\">In case the \"create\" operation is successful, the response data would contain the &ldquo;plrepId&rdquo;. This represents the internal reference ID for the P&amp;L statement that was just created and can be used for&nbsp;<span style=\"color: #0563c1;\"><u><a href=\"#operation/Retrieve_ProfitLoss_Statements\">retrieve</a></u></span>&nbsp;and &nbsp;<span style=\"color: #0563c1;\"><u><a href=\"#operation/Update_Existing_ProfitLoss_Statement\">update</a></u></span>&nbsp; operations.</p>",
        "responses": {
          "default": {
            "description": "successful operation"
          }
        },
        "requestBody": {
          "$ref": "#/components/requestBodies/FSCreateLeadArray"
        }
      }
    },
    "/dataservices/retrieve profit loss statements": {
      "post": {
        "tags": [
          "Profit and Loss Statements"
        ],
        "summary": "Retrieve Profit Loss Statements",
        "description": "<p class=\"western\">This endpoint is used to retrieve an existing P&amp;L statement. In order to do so, a POST type of call is to be made to the specified endpoint.</p><p class=\"western\"><strong>Production API Endpoint : </strong> <span style=\"color: #0563c1;\"><u><a href=\"https://finance.franconnect.net/manage-finance/profit-loss/filter\">https://finance.franconnect.net/manage-finance/profit-loss/filter</a></u></span></p><p class=\"western\"><strong>UAT API Endpoint &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; : </strong> <span style=\"color: #0563c1;\"><u><a href=\"https://finance.franconnectuat.net/manage-finance/profit-loss/filter\">https://finance.franconnectuat.net/manage-finance/profit-loss/filter</a></u></span></p><p class=\"western\"><strong>Operation Name &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; : </strong>&nbsp;POST</p><p class=\"western\">&nbsp;</p><p class=\"western\">Other details that are to be included in the request are:</p><ol><li><p>&ldquo;Authorization&rdquo; as the key name with its value as &ldquo;Bearer &lt;acess_token&gt;&rdquo;. Steps to retrieve the access_token is mentioned <u><a href=\"#tag/Authentication\">here</a></u>.</p></li><li><p>&ldquo;Content-Type&rdquo; as the key and its value as &ldquo;application/json&rdquo;.</p></li><li><p>&ldquo;X-TenantId&rdquo; as the key and its value as per the FranConnect system&rsquo;s login URL. Steps to determine the &ldquo;X-TenantId&rdquo; is mentioned <u><a href=\"#tag/Authentication\">here</a></u>.</p></li><li><p>The body of the request should contain the constraints that would be used to filter out the P&amp;L report.</p></li></ol><p class=\"western\">Other values that can be used as constraints along with their clause criteria as mentioned below.</p><p class=\"western\">&nbsp;</p><center><table width=\"720\" cellspacing=\"0\" cellpadding=\"7\"><colgroup><col width=\"147\" /> <col width=\"127\" /> <col width=\"306\" /> <col width=\"82\" /> </colgroup><tbody><tr valign=\"top\"><td style=\"background: #4472c4;\" bgcolor=\"#4472c4\" width=\"147\" height=\"8\"><p class=\"western\"><span style=\"color: #ffffff;\"><strong>Field</strong></span></p></td><td style=\"background: #4472c4;\" bgcolor=\"#4472c4\" width=\"127\"><p class=\"western\"><span style=\"color: #ffffff;\"><strong>Field Display Name</strong></span></p></td><td style=\"background: #4472c4;\" bgcolor=\"#4472c4\" width=\"306\"><p class=\"western\"><span style=\"color: #ffffff;\"><strong>Applied Clause</strong></span></p></td><td style=\"background: #4472c4;\" bgcolor=\"#4472c4\" width=\"82\"><p class=\"western\"><span style=\"color: #ffffff;\"><strong>Format</strong></span></p></td></tr><tr valign=\"top\"><td style=\"background: #d9e2f3;\" bgcolor=\"#d9e2f3\" width=\"147\"><p class=\"western\"><strong><span lang=\"en\">plrepId</span></strong></p></td><td style=\"background: #d9e2f3;\" bgcolor=\"#d9e2f3\" width=\"127\"><p class=\"western\"><span lang=\"en\">Internal Unique Reference Number of the P&amp;L Report</span></p></td><td style=\"background: #d9e2f3;\" bgcolor=\"#d9e2f3\" width=\"306\"><p class=\"western\"><span lang=\"en\">EQUAL, IN</span></p></td><td style=\"background: #d9e2f3;\" bgcolor=\"#d9e2f3\" width=\"82\"><p class=\"western\"><span lang=\"en\">String</span></p></td></tr><tr valign=\"top\"><td width=\"147\"><p class=\"western\"><strong><span lang=\"en\">franchiseeNo</span></strong></p></td><td width=\"127\"><p class=\"western\">Internal Unique Reference Number of the location</p></td><td width=\"306\"><p class=\"western\"><span lang=\"en\">EQUAL, IN</span></p></td><td width=\"82\"><p class=\"western\"><span lang=\"en\">String</span></p></td></tr><tr valign=\"top\"><td style=\"background: #d9e2f3;\" bgcolor=\"#d9e2f3\" width=\"147\" height=\"73\"><p class=\"western\"><strong><span lang=\"en\">statementPeriod</span></strong></p></td><td style=\"background: #d9e2f3;\" bgcolor=\"#d9e2f3\" width=\"127\"><p class=\"western\"><span lang=\"en\">Statement Period</span></p></td><td style=\"background: #d9e2f3;\" bgcolor=\"#d9e2f3\" width=\"306\"><p class=\"western\"><span lang=\"en\">EQUAL, GREATER_THAN,</span></p><p class=\"western\"><span lang=\"en\">LESS_THAN, GREATER_THAN_OR_EQUAL,</span></p><p class=\"western\"><span lang=\"en\">LESS_THAN_OR_EQUAL, BETWEEN</span></p></td><td style=\"background: #d9e2f3;\" bgcolor=\"#d9e2f3\" width=\"82\"><p class=\"western\"><span lang=\"en\">Date</span></p></td></tr><tr valign=\"top\"><td width=\"147\" height=\"77\"><p class=\"western\"><strong><span lang=\"en\">submissionDate</span></strong></p></td><td width=\"127\"><p class=\"western\"><span lang=\"en\">Submission Date</span></p></td><td width=\"306\"><p class=\"western\"><span lang=\"en\">EQUAL, GREATER_THAN,</span></p><p class=\"western\"><span lang=\"en\">LESS_THAN, GREATER_THAN_OR_EQUAL,</span></p><p class=\"western\"><span lang=\"en\">LESS_THAN_OR_EQUAL, BETWEEN</span></p></td><td width=\"82\"><p class=\"western\"><span lang=\"en\">Date</span></p></td></tr></tbody></table></center><p class=\"western\">&nbsp;</p><p class=\"western\"><strong>Note</strong>: Multiple constraints can be used in the filter to retrieve data.</p><p class=\"western\">&nbsp;</p>",
        "responses": {
          "default": {
            "description": "successful operation"
          }
        },
        "requestBody": {
          "$ref": "#/components/requestBodies/FSCreateLeadArray"
        }
      }
    },
    "/dataservices/update exising profit/loss statement": {
      "post": {
        "tags": [
          "Profit and Loss Statements"
        ],
        "summary": "Update Existing Profit/Loss Statement",
        "description": "<p class=\"western\">This endpoint is used to update an existing P&amp;L report. For this, a PUT type of call is to be made to the P&amp;L endpoint.</p><p class=\"western\"><strong>Production API Endpoint : </strong><span style=\"color: #0563c1;\"><u><a href=\"https://finance.franconnect.net/manage-finance/profit-loss/%7BplrepId%7D\"><strong>https://finance.franconnect.net/manage-finance/profit-loss/{plrepId}</strong></a></u></span></p><p class=\"western\"><strong>UAT API Endpoint &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; : </strong><span style=\"color: #0563c1;\"><u><a href=\"https://finance.franconnectuat.net/manage-finance/profit-loss/%7BplrepId%7D\"><strong>https://finance.franconnectuat.net/manage-finance/profit-loss/{plrepId}</strong></a></u></span></p><p class=\"western\"><strong>Operation Name  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; : </strong> PUT</p><p class=\"western\">&nbsp;</p><p class=\"western\">Other details that are to be included in the request are:</p><ol><li><p>&ldquo;Authorization&rdquo; as the key name with its value as &ldquo;Bearer &lt;acess_token&gt;&rdquo;. Steps to retrieve the access_token is mentioned <u><a href=\"#tag/Authentication\">here</a></u>.</p></li><li><p>&ldquo;Content-Type&rdquo; as the key and its value as &ldquo;application/json&rdquo;.</p></li><li><p>&ldquo;X-TenantId&rdquo; as the key and its value as per the FranConnect system&rsquo;s login URL. Steps to determine the &ldquo;X-TenantId&rdquo; is mentioned <u><a href=\"#tag/Authentication\">here</a></u>.</p></li><li><p>The body of the request should contain the profit and loss categories. Details on retrieving Profit and Loss categories is described <u><a href=\"#operation/Retrieve_ProfitLoss_Categories\">here</a></u>.</p></li></ol>",
        "responses": {
          "default": {
            "description": "successful operation"
          }
        },
        "requestBody": {
          "$ref": "#/components/requestBodies/FSCreateLeadArray"
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AdminSubModule": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string"
          },
          "module": {
            "type": "string"
          },
          "responseType": {
            "type": "string"
          }
        },
        "XML": {
          "name": "fsMail"
        }
      },
      "CreateSchema": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string"
          },
          "module": {
            "type": "string"
          },
          "subModule": {
            "type": "string"
          },
          "operation": {
            "type": "string"
          },
          "roleTypeForQuery": {
            "type": "integer"
          }
                },
        "xml": {
          "name": "fsMail"
        }
      },
      "FSCreateLead": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string"
          },
          "module": {
            "type": "string"
          },
            "subModule": {
            "type": "string"
          },
          "xmlString": {
            "type": "string"
          },
          "responseType": {
            "type": "string"
          }
        },
        "xml": {
          "name": "fsMail"
        }
      }
    },
    "requestBodies": {
      "CreateSchemaArray": {
        "content": {
          "application/xml": {
            "example": "POST /<context-path>/rest/dataservices/query HTTP/1.1\nContent-type: application/x-www-form-urlencoded/key=key&module=admin&subModule=user&roleTypeForQuery=1&operation=create",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/CreateSchema"
              },
              "xml": {
                "wrapped": true
              }
            }
          }
        },
        "description": "Lead Creation object",
        "required": true
      },
      "RetrieveSchemaArray": {
        "content": {
          "application/xml": {
            "example": "POST /<context-path>/rest/dataservices/query HTTP/1.1\nContent-type: application/x-www-form-urlencoded/key=key&module=admin&subModule=user&operation=retrieve",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/CreateSchema"
              },
              "xml": {
                "wrapped": true
              }
            }
          }
        },
        "description": "Lead Creation object",
        "required": true
      },
      "UpdateSchemaArray": {
        "content": {
          "application/xml": {
            "example": "POST /<context-path>/rest/dataservices/query HTTP/1.1\nContent-type: application/x-www-form-urlencoded/key=key&module=admin&subModule=user&roleTypeForQuery=1&operation=update",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/CreateSchema"
              },
              "xml": {
                "wrapped": true
              }
            }
          }
        },
        "description": "Lead Creation object",
        "required": true
      },
      "DeleteSchemaArray": {
        "content": {
          "application/xml": {
            "example": "POST /<context-path>/rest/dataservices/query HTTP/1.1\nContent-type: application/x-www-form-urlencoded/key=key&module=admin&subModule=user&operation=delete",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/CreateSchema"
              },
              "xml": {
                "wrapped": true
              }
            }
          }
        },
        "description": "Lead Creation object",
        "required": true
      },
      "FSCreateLeadArray": {
        "content": {
          "application/xml": {
            "example": "<?xml version='1.0' encoding='utf-8'?>\n<fcRequest>\n<fsLead>\n<salutation>Mr.</salutation>\n<firstName>Josn</firstName>\n<lastName>Marsh</lastName>\n<address>100 Main St</address>\n<address2></address2>\n<city>Seattle</city>\n<country>USA</country>\n<stateID>Washington</stateID>\n<sendAutomaticMail>Yes</sendAutomaticMail>\n<zip>98102</zip>\n<countyID>Adams</countyID>\n<primaryPhoneToCall>Email</primaryPhoneToCall>\n<bestTimeToContact></bestTimeToContact>\n<phone></phone>\n<phoneExt></phoneExt>\n<homePhone></homePhone>\n<homePhoneExt></homePhoneExt>\n<fax></fax>\n<mobile></mobile>\n<emailID>support@franconnect.com</emailID>\n<companyName></companyName>\n<comments>Newly added lead in this area</comments>\n<basedOnAssignmentRule>Yes</basedOnAssignmentRule>\n<leadOwnerID>Chris Barlow</leadOwnerID>\n<leadRatingID>Warm</leadRatingID>\n<marketingCodeId></marketingCodeId>\n488<leadSource2ID>Advertisement</leadSource2ID>\n<leadSource3ID>Magazine</leadSource3ID>\n<otherLeadSourceDetail></otherLeadSourceDetail>\n<liquidCapitalMin>10000</liquidCapitalMin>\n<liquidCapitalMax>Yes</liquidCapitalMax>\n<investTimeframe>5</investTimeframe>\n<background>Business</background>\n<sourceOfFunding>Business</sourceOfFunding>\n<nextCallDate>2016-04-04</nextCallDate>\n<division>Division</division>\n<noOfUnitReq>1</noOfUnitReq>\n<locationId1>Yes</locationId1>\n<locationId1b>Yes</locationId1b>\n<locationId2>Yes</locationId2>\n<preferredCity1>Reston</preferredCity1>\n<preferredCountry1>USA</preferredCountry1>\n<preferredStateId1>Albahama</preferredStateId1>\n<preferredCity2>Delhi</preferredCity2>\n<preferredCountry2>India</preferredCountry2>\n<preferredStateId2>Delhi</preferredStateId2>\n<forecastClosureDate>2016-04-06</forecastClosureDate>\n<probability>10</probability>\n<forecastRating>Upside</forecastRating>\n<forecastRevenue>1500</forecastRevenue>\n<basedOnWorkflowAssignmentRule>No</basedOnWorkflowAssignmentRule>\n<campaignID>Welcome Campaign</campaignID>\n<serviceID>Product/Service Update,Newsletters,Offers</serviceID>\n</fsLead>\n</fcRequest>",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/FSCreateLead"
              },
              "xml": {
                "name": "fcRequest",
                "wrapped": true
              }
            }
          }
        },
        "description": "Lead Creation object",
        "required": true
      },
      "FSRetrieveLeadArray": {
        "content": {
          "application/xml": {
            "example": "<?xml version='1.0' encoding='utf-8'?>\n<fcRequest>\n<filter>\n<referenceId>1696458950</referenceId>\n<requestDateFrom>2016-11-25</requestDateFrom>\n<requestDateTo>2017-12-25</requestDateTo>\n<leadStatusID op='eq'>NewLead</leadStatusID>\n</filter>\n</fcRequest>",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/FSCreateLead"
              },
              "xml": {
                "name": "fcRequest",
                "wrapped": true
              }
            }
          }
        },
        "description": "Lead Retrieval object",
        "required": true
      },
      "FSUpdateLeadArray": {
        "content": {
          "application/xml": {
            "example": "<?xml version='1.0' encoding='utf-8'?>\n<fcRequest>\n<fsLead>\n<referenceId>323234</referenceId>\n<salutation>Mr.</salutation>\n<firstName>Josn</firstName>\n<lastName>Marsh</lastName>\n<address>100 Main St</address>\n<address2></address2>\n<city>Seattle</city>\n<country>USA</country>\n<stateID>Washington</stateID>\n<zip>98102</zip>\n<countyID>Adams</countyID>\n<primaryPhoneToCall>Email</primaryPhoneToCall>\n<bestTimeToContact></bestTimeToContact>\n<phone></phone>\n<phoneExt></phoneExt>\n<homePhone></homePhone>\n765<homePhoneExt></homePhoneExt>\n<fax></fax>\n<mobile></mobile>\n<emailID>support@franconnect.com</emailID>\n<companyName></companyName>\n<comments>Newly added lead in this area</comments>\n<leadStatusID>Deffered</leadStatusID>\n<leadOwnerID>Chris Barlow</leadOwnerID>\n<leadRatingID>Warm</leadRatingID>\n<marketingCodeId></marketingCodeId>\n<leadSource2ID>Advertisement</leadSource2ID>\n<leadSource3ID>Magazine</leadSource3ID>\n<otherLeadSourceDetail></otherLeadSourceDetail>\n<liquidCapitalMin>10000</liquidCapitalMin>\n<liquidCapitalMax>50000</liquidCapitalMax>\n<investTimeframe>5</investTimeframe>\n<background>Business</background>\n<sourceOfFunding>Business</sourceOfFunding>\n<nextCallDate>2016-04-04</nextCallDate>\n<division>Division</division>\n<noOfUnitReq>2</noOfUnitReq>\n<statusChangeDate>2016-04-04</statusChangeDate>\n<noOfFieldSold>5</noOfFieldSold>\n<dateOfOpen>2016-04-04</dateOfOpen>\n<leadKilledReason></leadKilledReason>\n<leadKilledReasonComment></leadKilledReasonComment>\n<franchiseAwarded>Yes</franchiseAwarded>\n<locationId1>From New Available Sites</locationId1>\n<locationId1b>From Existing Sites</locationId1b>\n<locationId2>From Resale Sites</locationId2>\n<preferredCity1>New York City</preferredCity1>\n<preferredCountry1>USA </preferredCountry1>\n<preferredStateId1>New York</preferredStateId1>\n<preferredCity2>Delhi</preferredCity2>\n<preferredCountry2>India</preferredCountry2>\n<preferredStateId2>Delhi</preferredStateId2>\n766<forecastClosureDate>2016-04-06</forecastClosureDate>\n<probability>10</probability>\n<forecastRating>Upside</forecastRating>\n<forecastRevenue>1500</forecastRevenue>\n<unsubscribe>Opt-in</unsubscribe>\n<smsUnsubscribe></smsUnsubscribe>\n<campaignID>Welcome Campaign</campaignID>\n<serviceID>Product/Service Update,Newsletters,Offers</serviceID>\n</fsLead>\n</fcRequest>",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/FSCreateLead"
              },
              "xml": {
                "name": "fcRequest",
                "wrapped": true
              }
            }
          }
        },
        "description": "Lead Updation object",
        "required": true
      },
      "FSDeleteLeadArray": {
        "content": {
          "application/xml": {
            "example": "<?xml version='1.0' encoding='utf-8'?>\n<fcRequest>\n<fsLead>\n<referenceId>1661907438</referenceId>\n</fsLead>\n</fcRequest>",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/FSCreateLead"
              },
              "xml": {
                "name": "fcRequest",
                "wrapped": true
              }
            }
          }
        },
        "description": "Lead Deletion object",
        "required": true
      },
      "AdminSubModuleArray": {
        "content": {
          "application/xml": {
            "example": "POST /<context-path>/rest/dataservices/submodule HTTP/1.1\nContent-type: application/x-www-form-urlencoded/\nkey=key&module=admin&responseType=XML",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/AdminSubModule"
              },
              "xml": {
                "wrapped": true
              }
            }
          }
        },
        "description": "Lead Deletion object",
        "required": true
      },
      "SalesSubModuleArray": {
        "content": {
          "application/xml": {
            "example": "POST /<context-path>/rest/dataservices/submodule HTTP/1.1\nContent-type: application/x-www-form-urlencoded/\nkey=key&module=fs&responseType=XML",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/AdminSubModule"
              },
              "xml": {
                "name": "fcRequest",
                "wrapped": true
              }
            }
          }
        },
        "description": "Lead Deletion object",
        "required": true
      },
      "InfoMgrSubModuleArray": {
        "content": {
          "application/xml": {
            "example": "POST /<context-path>/rest/dataservices/submodule HTTP/1.1\nContent-type: application/x-www-form-urlencoded/\nkey=key&module=fim&responseType=XML",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/AdminSubModule"
              },
              "xml": {
                "name": "fcRequest",
                "wrapped": true
              }
            }
          }
        },
        "description": "Lead Deletion object",
        "required": true
      },
      "CRMSubModuleArray": {
        "content": {
          "application/xml": {
            "example": "POST /<context-path>/rest/dataservices/submodule HTTP/1.1\nContent-type: application/x-www-form-urlencoded/\nkey=key&module=cm&responseType=XML",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/AdminSubModule"
              },
              "xml": {
                "name": "fcRequest",
                "wrapped": true
              }
            }
          }
        },
        "description": "Lead Deletion object",
        "required": true
      }
    }
  }
}
